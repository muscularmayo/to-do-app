(()=>{"use strict";var e={426:(e,t,n)=>{n.d(t,{Z:()=>a});var o=n(537),r=n.n(o),c=n(645),i=n.n(c)()(r());i.push([e.id,"#container {\n  display: grid;\n  grid-template-columns: 1fr 5fr;\n  grid-gap: 5px;\n  grid-template-rows:  1fr minmax(80%, auto) 7fr;\n}\n\n#container > :nth-child(odd) {\n  background-color: #A9A9A9;\n}\n#container > :nth-child(even) {\n  background-color: #D3D3D3;\n}\n\n#todaysTasks {\n  color: purple;\n  position: absolute;\n  bottom: 0px;\n}\n\n#projectList {\n  position: relative;\n}\n\nh1 {\n  background-color: silver;\n}\n\nbody {\n  background-color: silver;\n}\n\n.task {\n  padding: 2px;\n  margin: 1px;\n  border: black;\n}\n\n.project {\n  padding: 1px;\n  border: 1px outset white;\n  min-height: 20px;\n  background-color: #9E9E9E;\n}\n\n#taskForm > button, label, input, select {\n  margin: 3px;\n}\n\ndiv > button, input {\n  margin: 3px;\n}\n\n#addProject {\n  background-color: #A9A9A9\n}\n\n.icon {\n  height: 18px;\n  width: 18px;\n  position: relative;\n  float: right;\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;EACE,aAAa;EACb,8BAA8B;EAC9B,aAAa;EACb,8CAA8C;AAChD;;AAEA;EACE,yBAAyB;AAC3B;AACA;EACE,yBAAyB;AAC3B;;AAEA;EACE,aAAa;EACb,kBAAkB;EAClB,WAAW;AACb;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,wBAAwB;AAC1B;;AAEA;EACE,wBAAwB;AAC1B;;AAEA;EACE,YAAY;EACZ,WAAW;EACX,aAAa;AACf;;AAEA;EACE,YAAY;EACZ,wBAAwB;EACxB,gBAAgB;EAChB,yBAAyB;AAC3B;;AAEA;EACE,WAAW;AACb;;AAEA;EACE,WAAW;AACb;;AAEA;EACE;AACF;;AAEA;EACE,YAAY;EACZ,WAAW;EACX,kBAAkB;EAClB,YAAY;AACd",sourcesContent:["#container {\n  display: grid;\n  grid-template-columns: 1fr 5fr;\n  grid-gap: 5px;\n  grid-template-rows:  1fr minmax(80%, auto) 7fr;\n}\n\n#container > :nth-child(odd) {\n  background-color: #A9A9A9;\n}\n#container > :nth-child(even) {\n  background-color: #D3D3D3;\n}\n\n#todaysTasks {\n  color: purple;\n  position: absolute;\n  bottom: 0px;\n}\n\n#projectList {\n  position: relative;\n}\n\nh1 {\n  background-color: silver;\n}\n\nbody {\n  background-color: silver;\n}\n\n.task {\n  padding: 2px;\n  margin: 1px;\n  border: black;\n}\n\n.project {\n  padding: 1px;\n  border: 1px outset white;\n  min-height: 20px;\n  background-color: #9E9E9E;\n}\n\n#taskForm > button, label, input, select {\n  margin: 3px;\n}\n\ndiv > button, input {\n  margin: 3px;\n}\n\n#addProject {\n  background-color: #A9A9A9\n}\n\n.icon {\n  height: 18px;\n  width: 18px;\n  position: relative;\n  float: right;\n}"],sourceRoot:""}]);const a=i},645:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",o=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),o&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),o&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,o,r,c){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(o)for(var a=0;a<this.length;a++){var s=this[a][0];null!=s&&(i[s]=!0)}for(var d=0;d<e.length;d++){var u=[].concat(e[d]);o&&i[u[0]]||(void 0!==c&&(void 0===u[5]||(u[1]="@layer".concat(u[5].length>0?" ".concat(u[5]):""," {").concat(u[1],"}")),u[5]=c),n&&(u[2]?(u[1]="@media ".concat(u[2]," {").concat(u[1],"}"),u[2]=n):u[2]=n),r&&(u[4]?(u[1]="@supports (".concat(u[4],") {").concat(u[1],"}"),u[4]=r):u[4]="".concat(r)),t.push(u))}},t}},537:e=>{e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),c="/*# ".concat(r," */"),i=n.sources.map((function(e){return"/*# sourceURL=".concat(n.sourceRoot||"").concat(e," */")}));return[t].concat(i).concat([c]).join("\n")}return[t].join("\n")}},379:e=>{var t=[];function n(e){for(var n=-1,o=0;o<t.length;o++)if(t[o].identifier===e){n=o;break}return n}function o(e,o){for(var c={},i=[],a=0;a<e.length;a++){var s=e[a],d=o.base?s[0]+o.base:s[0],u=c[d]||0,l="".concat(d," ").concat(u);c[d]=u+1;var p=n(l),m={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==p)t[p].references++,t[p].updater(m);else{var A=r(m,o);o.byIndex=a,t.splice(a,0,{identifier:l,updater:A,references:1})}i.push(l)}return i}function r(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,r){var c=o(e=e||[],r=r||{});return function(e){e=e||[];for(var i=0;i<c.length;i++){var a=n(c[i]);t[a].references--}for(var s=o(e,r),d=0;d<c.length;d++){var u=n(c[d]);0===t[u].references&&(t[u].updater(),t.splice(u,1))}c=s}}},569:e=>{var t={};e.exports=function(e,n){var o=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(n)}},216:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},795:e=>{e.exports=function(e){var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var o="";n.supports&&(o+="@supports (".concat(n.supports,") {")),n.media&&(o+="@media ".concat(n.media," {"));var r=void 0!==n.layer;r&&(o+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),o+=n.css,r&&(o+="}"),n.media&&(o+="}"),n.supports&&(o+="}");var c=n.sourceMap;c&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(c))))," */")),t.styleTagTransform(o,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}},855:(e,t,n)=>{e.exports=n.p+"97405d90a9e9a397d1fd.png"},886:(e,t,n)=>{e.exports=n.p+"3f69390cbd68d6a92fc3.png"}},t={};function n(o){var r=t[o];if(void 0!==r)return r.exports;var c=t[o]={id:o,exports:{}};return e[o](c,c.exports,n),c.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var o in t)n.o(t,o)&&!n.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.p="/dist/index.html";var o={};(()=>{n.d(o,{tO:()=>G});var e=n(379),t=n.n(e),r=n(795),c=n.n(r),i=n(569),a=n.n(i),s=n(565),d=n.n(s),u=n(216),l=n.n(u),p=n(589),m=n.n(p),A=n(426),f={};f.styleTagTransform=m(),f.setAttributes=d(),f.insert=a().bind(null,"head"),f.domAPI=c(),f.insertStyleElement=l(),t()(A.Z,f),A.Z&&A.Z.locals&&A.Z.locals;const h=function(){Object.keys(G).forEach((function(e){"today's tasks"!==e&&E(e)})),g(),y()},y=function(){document.querySelector("#projectList").appendChild(P())},E=function(e){document.querySelector("#projectList").appendChild(q(e))},v=function(){document.querySelector("#taskList").appendChild(T())},C=function(e){const t=I(e);document.querySelector("#taskList").appendChild(t)},b=function(){const e=document.querySelector("#addProject"),t=document.querySelector("#projectList");t.removeChild(e),t.appendChild(B()),document.querySelector("#addProjectInput").focus()},g=function(){const e=document.querySelector("#addProject"),t=document.querySelector("#projectList");e||t.appendChild(M())},k=function(e){!function(){const e=document.querySelector("#taskList");for(;e.firstChild;)e.removeChild(e.firstChild)}(),G[e]?G[e].tasks.forEach((e=>{C(e.title)})):console.log("catch render error"),v()},S=function(e){const t=document.createElement("h3");t.innerHTML=e;const n=document.querySelector("#projectTitle"),o=n.firstElementChild;console.log(t),o&&n.removeChild(o),n.appendChild(t)},L=function(){return"taskForm"===document.querySelector("#taskList").lastElementChild.id&&(document.querySelector("#taskList").lastElementChild.remove(),!0)};var x=n(886),j=n(855);const T=function(){const e=document.createElement("button");return e.setAttribute("id","addTask"),e.addEventListener("click",D),e.innerHTML="Add Task",e},q=function(e){const t=document.createElement("div");return t.innerHTML=e,t.setAttribute("class","project"),t.addEventListener("click",F),t.appendChild(w()),t},w=function(){const e=document.createElement("span"),t=new Image;t.src=x,t.classList.add("edit"),t.classList.add("icon"),t.addEventListener("click",Y),e.appendChild(t);const n=new Image;return n.src=j,n.classList.add("delete"),n.classList.add("icon"),n.addEventListener("click",J),e.appendChild(n),e},B=function(){const e=document.createElement("div");e.setAttribute("id","addProject");const t=document.createElement("input");t.setAttribute("type","text"),t.setAttribute("id","addProjectInput");const n=document.createElement("div"),o=document.createElement("button"),r=document.createElement("button");return o.innerHTML="Add",r.innerHTML="Cancel",r.addEventListener("click",H),o.addEventListener("click",W),n.appendChild(o),n.appendChild(r),e.appendChild(t),e.appendChild(n),t.setAttribute("autofocus","true"),t.addEventListener("keyup",(function(e){e.preventDefault(),13===e.keyCode&&W()})),e},M=function(){const e=document.createElement("button");return e.setAttribute("id","addProject"),e.innerHTML="Add Project",e.addEventListener("click",b),e},I=function(e){const t=document.createElement("div");return t.setAttribute("class","tasks"),t.innerHTML=e,t.addEventListener("click",(function(e){console.log(this)})),document.createElement("div"),document.createElement("span"),document.createElement("span"),document.createElement("span"),t},P=function(){const e=document.createElement("div");e.setAttribute("id","todaysTasks");const t=document.createElement("div");return t.setAttribute("class","project"),t.innerHTML="today's tasks",e.appendChild(t),t.addEventListener("click",F),e},H=function(){const e=document.querySelector("#addProject"),t=document.querySelector("#projectList");t.removeChild(e),t.appendChild(M())},N=function(){console.log(this),L(),v()},O=function(){const e=function(){const e={};return e.title=document.querySelector("#title").value||"default task",e.description=document.querySelector("#description").value||"",e.date=document.querySelector("#date").value||"",e.priority=document.querySelector("#priority").value||"",e.project=document.querySelector("#projectTitle").firstChild.innerText,e}(),t=document.querySelector("#projectTitle").firstElementChild.innerHTML;var n,o,r;console.log(e),e.date===(n=new Date,o=String(n.getDate()).padStart(2,"0"),r=String(n.getMonth()+1).padStart(2,"0"),n.getFullYear()+"-"+r+"-"+o)&&(G["today's tasks"].tasks.push(e),_()),G[t].tasks.push(e),I(e.title),U(t),L(),C(e.title),v()},D=function(){document.querySelector("#taskForm")||(function(){if(document.querySelector("#addTask")){const e=document.querySelector("#taskList"),t=document.querySelector("#addTask");e.removeChild(t)}}(),document.querySelector("#taskList").appendChild(function(){const e=document.createElement("div");e.id="taskForm";const t=document.createElement("label");t.setAttribute("for","title"),t.innerHTML="Task Name";const n=document.createElement("input");n.setAttribute("type","text"),n.setAttribute("id","title"),e.appendChild(t),e.appendChild(n);const o=document.createElement("input");o.setAttribute("type","date"),o.setAttribute("id","date"),e.appendChild(o);const r=document.createElement("label");r.setAttribute("for","priority"),r.innerHTML="Priority";const c=document.createElement("select");c.setAttribute("id","priority"),c.setAttribute("name","priority");const i=document.createElement("option");i.setAttribute("value","high"),i.innerHTML="High";const a=document.createElement("option");a.setAttribute("value","medium"),a.innerHTML="Medium";const s=document.createElement("option");s.setAttribute("value","low"),s.innerHTML="Low",c.appendChild(i),c.appendChild(a),c.appendChild(s),e.appendChild(r),e.appendChild(c);const d=document.createElement("label");d.setAttribute("for","description"),d.innerHTML="Task Description";const u=document.createElement("input");u.setAttribute("type","text"),u.setAttribute("id","description"),e.appendChild(d),e.appendChild(u);const l=document.createElement("div"),p=document.createElement("button"),m=document.createElement("button");return p.innerHTML="Submit",m.innerHTML="Cancel",m.addEventListener("click",N),p.addEventListener("click",O),l.appendChild(p),l.appendChild(m),e.appendChild(l),u.addEventListener("keyup",(function(e){e.preventDefault(),13===e.keyCode&&O()})),n.addEventListener("keyup",(function(e){e.preventDefault(),13===e.keyCode&&O()})),o.addEventListener("keyup",(function(e){e.preventDefault(),13===e.keyCode&&O()})),e}())),document.querySelector("#title").focus()},W=function(){const e=document.querySelector("#addProjectInput").value;if(""===e)return void alert("please name your project!");const t=document.querySelector("#projectList"),n=document.querySelector("#addProject");G[e]?alert("projects must be a different name!"):(t.removeChild(n),E(e),R(e),t.appendChild(M()))},F=function(){if(console.log(this),this.firstElementChild&&"INPUT"===this.firstElementChild.tagName)return;const e=this.innerText;console.log(e),S(e),k(e)},J=function(e){const t=this.parentNode.parentNode;console.log(t),X(t.innerText),function(e){e.remove();const t=document.querySelector(".project");console.log(t),S(t.innerText),k(t.innerText),console.log(t.innerText)}(t),e.stopPropagation()},Y=function(e){let t=this.parentNode.parentNode;const n=t.innerText;console.log(t,n),S(n),k(n);const o=document.createElement("input");o.setAttribute("autofocus","true"),o.setAttribute("type","text"),o.setAttribute("id","editProjectInput"),t.innerText="",o.value=n,o.addEventListener("keyup",(function(e){if(e.preventDefault(),13===e.keyCode){const e=o.value;!function(e,t){z(e,t)}(n,e),t.innerText=e,t.appendChild(w()),S(e),k(e)}})),t.appendChild(o),document.querySelector("#editProjectInput").focus(),e.stopPropagation()},Z=window.localStorage,R=function(e){G[e]={tasks:[],description:""},Z.setItem(e,JSON.stringify({tasks:[],description:""}))},U=function(e){const t=G[e];Z.removeItem(e),Z.setItem(e,JSON.stringify(t))},X=function(e){G[e],G["today's tasks"].tasks.forEach(((t,n,o)=>{t.project===e&&o.splice(n,1)})),_(),Z.removeItem(e),delete G[e]},_=function(){const e=G["today's tasks"];Z.removeItem(e),Z.setItem("today's tasks",JSON.stringify(e))},z=function(e,t){const n=G[e];G[t]=n,Z.removeItem(e),Z.setItem(t,JSON.stringify(n)),delete G[e]};document.querySelector("#addTask"),document.querySelector("#container"),document.querySelectorAll(".project"),document.querySelectorAll(".task"),window.localStorage;let G={};!function(){if(0===window.localStorage.length){G["default project"]={tasks:[],description:""},G["today's tasks"]={tasks:[],description:""},Z.setItem("today's tasks",JSON.stringify(G["today's tasks"])),G["default project"].tasks.push(function(e,t,n,o){const r={title:"default task",description:"",date:"",priority:"Low"};return r}()),Z.setItem("default project",JSON.stringify(G["default project"])),h();const e=Object.keys(G)[0];S(e),k(e)}else{Object.keys(window.localStorage).forEach((function(e){G[e]=JSON.parse(window.localStorage.getItem(e))})),h();const e=Object.keys(G)[0];S(e),k(e)}}()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,