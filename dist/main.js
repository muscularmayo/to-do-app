(()=>{"use strict";var e={426:(e,t,n)=>{n.d(t,{Z:()=>a});var o=n(537),r=n.n(o),i=n(645),c=n.n(i)()(r());c.push([e.id,"#container {\n  display: grid;\n  grid-template-columns: 1fr 5fr;\n  grid-gap: 5px;\n  grid-template-rows:  1fr minmax(80%, auto) 7fr;\n}\n\n#container > :nth-child(odd) {\n  background-color: #A9A9A9;\n}\n#container > :nth-child(even) {\n  background-color: #D3D3D3;\n}\n\n#todaysTasks {\n  color: purple;\n  position: absolute;\n  bottom: 0px;\n}\n\n#projectList {\n  position: relative;\n}\n\nh1 {\n  background-color: silver;\n}\n\nbody {\n  background-color: silver;\n}\n\n.task {\n  padding: 2px;\n  margin: 1px;\n  border: black;\n}\n\n.project {\n  padding: 1px;\n  border: 1px outset white;\n  min-height: 20px;\n  background-color: #9E9E9E;\n}\n\n#taskForm > button, label, input, select {\n  margin: 3px;\n}\n\ndiv > button, input {\n  margin: 3px;\n}\n\n#addProject {\n  background-color: #A9A9A9\n}\n\n.icon {\n  height: 18px;\n  width: 18px;\n  position: relative;\n  float: right;\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;EACE,aAAa;EACb,8BAA8B;EAC9B,aAAa;EACb,8CAA8C;AAChD;;AAEA;EACE,yBAAyB;AAC3B;AACA;EACE,yBAAyB;AAC3B;;AAEA;EACE,aAAa;EACb,kBAAkB;EAClB,WAAW;AACb;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,wBAAwB;AAC1B;;AAEA;EACE,wBAAwB;AAC1B;;AAEA;EACE,YAAY;EACZ,WAAW;EACX,aAAa;AACf;;AAEA;EACE,YAAY;EACZ,wBAAwB;EACxB,gBAAgB;EAChB,yBAAyB;AAC3B;;AAEA;EACE,WAAW;AACb;;AAEA;EACE,WAAW;AACb;;AAEA;EACE;AACF;;AAEA;EACE,YAAY;EACZ,WAAW;EACX,kBAAkB;EAClB,YAAY;AACd",sourcesContent:["#container {\n  display: grid;\n  grid-template-columns: 1fr 5fr;\n  grid-gap: 5px;\n  grid-template-rows:  1fr minmax(80%, auto) 7fr;\n}\n\n#container > :nth-child(odd) {\n  background-color: #A9A9A9;\n}\n#container > :nth-child(even) {\n  background-color: #D3D3D3;\n}\n\n#todaysTasks {\n  color: purple;\n  position: absolute;\n  bottom: 0px;\n}\n\n#projectList {\n  position: relative;\n}\n\nh1 {\n  background-color: silver;\n}\n\nbody {\n  background-color: silver;\n}\n\n.task {\n  padding: 2px;\n  margin: 1px;\n  border: black;\n}\n\n.project {\n  padding: 1px;\n  border: 1px outset white;\n  min-height: 20px;\n  background-color: #9E9E9E;\n}\n\n#taskForm > button, label, input, select {\n  margin: 3px;\n}\n\ndiv > button, input {\n  margin: 3px;\n}\n\n#addProject {\n  background-color: #A9A9A9\n}\n\n.icon {\n  height: 18px;\n  width: 18px;\n  position: relative;\n  float: right;\n}"],sourceRoot:""}]);const a=c},645:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",o=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),o&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),o&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,o,r,i){"string"==typeof e&&(e=[[null,e,void 0]]);var c={};if(o)for(var a=0;a<this.length;a++){var d=this[a][0];null!=d&&(c[d]=!0)}for(var s=0;s<e.length;s++){var u=[].concat(e[s]);o&&c[u[0]]||(void 0!==i&&(void 0===u[5]||(u[1]="@layer".concat(u[5].length>0?" ".concat(u[5]):""," {").concat(u[1],"}")),u[5]=i),n&&(u[2]?(u[1]="@media ".concat(u[2]," {").concat(u[1],"}"),u[2]=n):u[2]=n),r&&(u[4]?(u[1]="@supports (".concat(u[4],") {").concat(u[1],"}"),u[4]=r):u[4]="".concat(r)),t.push(u))}},t}},537:e=>{e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),i="/*# ".concat(r," */"),c=n.sources.map((function(e){return"/*# sourceURL=".concat(n.sourceRoot||"").concat(e," */")}));return[t].concat(c).concat([i]).join("\n")}return[t].join("\n")}},379:e=>{var t=[];function n(e){for(var n=-1,o=0;o<t.length;o++)if(t[o].identifier===e){n=o;break}return n}function o(e,o){for(var i={},c=[],a=0;a<e.length;a++){var d=e[a],s=o.base?d[0]+o.base:d[0],u=i[s]||0,l="".concat(s," ").concat(u);i[s]=u+1;var p=n(l),m={css:d[1],media:d[2],sourceMap:d[3],supports:d[4],layer:d[5]};if(-1!==p)t[p].references++,t[p].updater(m);else{var A=r(m,o);o.byIndex=a,t.splice(a,0,{identifier:l,updater:A,references:1})}c.push(l)}return c}function r(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,r){var i=o(e=e||[],r=r||{});return function(e){e=e||[];for(var c=0;c<i.length;c++){var a=n(i[c]);t[a].references--}for(var d=o(e,r),s=0;s<i.length;s++){var u=n(i[s]);0===t[u].references&&(t[u].updater(),t.splice(u,1))}i=d}}},569:e=>{var t={};e.exports=function(e,n){var o=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(n)}},216:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},795:e=>{e.exports=function(e){var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var o="";n.supports&&(o+="@supports (".concat(n.supports,") {")),n.media&&(o+="@media ".concat(n.media," {"));var r=void 0!==n.layer;r&&(o+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),o+=n.css,r&&(o+="}"),n.media&&(o+="}"),n.supports&&(o+="}");var i=n.sourceMap;i&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),t.styleTagTransform(o,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}},855:(e,t,n)=>{e.exports=n.p+"97405d90a9e9a397d1fd.png"},886:(e,t,n)=>{e.exports=n.p+"3f69390cbd68d6a92fc3.png"}},t={};function n(o){var r=t[o];if(void 0!==r)return r.exports;var i=t[o]={id:o,exports:{}};return e[o](i,i.exports,n),i.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var o in t)n.o(t,o)&&!n.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{var e;n.g.importScripts&&(e=n.g.location+"");var t=n.g.document;if(!e&&t&&(t.currentScript&&(e=t.currentScript.src),!e)){var o=t.getElementsByTagName("script");o.length&&(e=o[o.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),n.p=e})();var o={};(()=>{n.d(o,{tO:()=>z});var e=n(379),t=n.n(e),r=n(795),i=n.n(r),c=n(569),a=n.n(c),d=n(565),s=n.n(d),u=n(216),l=n.n(u),p=n(589),m=n.n(p),A=n(426),f={};f.styleTagTransform=m(),f.setAttributes=s(),f.insert=a().bind(null,"head"),f.domAPI=i(),f.insertStyleElement=l(),t()(A.Z,f),A.Z&&A.Z.locals&&A.Z.locals;const h=function(){Object.keys(z).forEach((function(e){"today's tasks"!==e&&v(e)})),b(),y()},y=function(){document.querySelector("#projectList").appendChild(P())},v=function(e){document.querySelector("#projectList").appendChild(w(e))},E=function(){document.querySelector("#taskList").appendChild(j())},C=function(e,t,n,o){const r=M(e,t,n,o);document.querySelector("#taskList").appendChild(r)},g=function(){const e=document.querySelector("#addProject"),t=document.querySelector("#projectList");t.removeChild(e),t.appendChild(B()),document.querySelector("#addProjectInput").focus()},b=function(){const e=document.querySelector("#addProject"),t=document.querySelector("#projectList");e||t.appendChild(I())},k=function(e){!function(){const e=document.querySelector("#taskList");for(;e.firstChild;)e.removeChild(e.firstChild)}(),z[e]?z[e].tasks.forEach((e=>{C(e.title,e.description,e.date,e.priority)})):console.log("catch render error"),E()},S=function(e){const t=document.createElement("h3");t.innerHTML=e;const n=document.querySelector("#projectTitle"),o=n.firstElementChild;console.log(t),o&&n.removeChild(o),n.appendChild(t)},x=function(){return"taskForm"===document.querySelector("#taskList").lastElementChild.id&&(document.querySelector("#taskList").lastElementChild.remove(),!0)};var L=n(886),T=n(855);const j=function(){const e=document.createElement("button");return e.setAttribute("id","addTask"),e.addEventListener("click",D),e.innerHTML="Add Task",e},w=function(e){const t=document.createElement("div");return t.innerHTML=e,t.setAttribute("class","project"),t.addEventListener("click",W),t.appendChild(q()),t},q=function(){const e=document.createElement("span"),t=new Image;t.src=L,t.classList.add("edit"),t.classList.add("icon"),t.addEventListener("click",Y),e.appendChild(t);const n=new Image;return n.src=T,n.classList.add("delete"),n.classList.add("icon"),n.addEventListener("click",J),e.appendChild(n),e},B=function(){const e=document.createElement("div");e.setAttribute("id","addProject");const t=document.createElement("input");t.setAttribute("type","text"),t.setAttribute("id","addProjectInput");const n=document.createElement("div"),o=document.createElement("button"),r=document.createElement("button");return o.innerHTML="Add",r.innerHTML="Cancel",r.addEventListener("click",N),o.addEventListener("click",F),n.appendChild(o),n.appendChild(r),e.appendChild(t),e.appendChild(n),t.setAttribute("autofocus","true"),t.addEventListener("keyup",(function(e){e.preventDefault(),13===e.keyCode&&F()})),e},I=function(){const e=document.createElement("button");return e.setAttribute("id","addProject"),e.innerHTML="Add Project",e.addEventListener("click",g),e},M=function(e,t,n,o){const r=document.createElement("span");r.setAttribute("class","tasks"),r.innerText=e,r.addEventListener("click",(function(e){console.log(this)}));const i=document.createElement("ul"),c=document.createElement("li"),a=document.createElement("li"),d=document.createElement("li");return void 0===t&&(t="no description"),void 0===n&&(n="no date"),void 0===o&&(o=""),c.innerText=t,a.innerText=n,d.innerText=o,i.appendChild(c),i.appendChild(a),i.appendChild(d),r.appendChild(i),r},P=function(){const e=document.createElement("div");e.setAttribute("id","todaysTasks");const t=document.createElement("div");return t.setAttribute("class","project"),t.innerHTML="today's tasks",e.appendChild(t),t.addEventListener("click",W),e},N=function(){const e=document.querySelector("#addProject"),t=document.querySelector("#projectList");t.removeChild(e),t.appendChild(I())},H=function(){console.log(this),x(),E()},O=function(){const e=function(){const e={};return e.title=document.querySelector("#title").value||"default task",e.description=document.querySelector("#description").value||"",e.date=document.querySelector("#date").value||"",e.priority=document.querySelector("#priority").value||"",e.project=document.querySelector("#projectTitle").firstChild.innerText,e}(),t=document.querySelector("#projectTitle").firstElementChild.innerText;var n,o,r;console.log(e),e.date===(n=new Date,o=String(n.getDate()).padStart(2,"0"),r=String(n.getMonth()+1).padStart(2,"0"),n.getFullYear()+"-"+r+"-"+o)&&(z["today's tasks"].tasks.push(e),X()),z[t].tasks.push(e),M(e.title,e.description,e.date,e.priority),U(t),x(),C(e.title,e.description,e.date,e.priority),E()},D=function(){document.querySelector("#taskForm")||(function(){if(document.querySelector("#addTask")){const e=document.querySelector("#taskList"),t=document.querySelector("#addTask");e.removeChild(t)}}(),document.querySelector("#taskList").appendChild(function(){const e=document.createElement("div");e.id="taskForm";const t=document.createElement("label");t.setAttribute("for","title"),t.innerHTML="Task Name";const n=document.createElement("input");n.setAttribute("type","text"),n.setAttribute("id","title"),e.appendChild(t),e.appendChild(n);const o=document.createElement("input");o.setAttribute("type","date"),o.setAttribute("id","date"),e.appendChild(o);const r=document.createElement("label");r.setAttribute("for","priority"),r.innerHTML="Priority";const i=document.createElement("select");i.setAttribute("id","priority"),i.setAttribute("name","priority");const c=document.createElement("option");c.setAttribute("value","high"),c.innerHTML="High";const a=document.createElement("option");a.setAttribute("value","medium"),a.innerHTML="Medium";const d=document.createElement("option");d.setAttribute("value","low"),d.innerHTML="Low",i.appendChild(c),i.appendChild(a),i.appendChild(d),e.appendChild(r),e.appendChild(i);const s=document.createElement("label");s.setAttribute("for","description"),s.innerHTML="Task Description";const u=document.createElement("input");u.setAttribute("type","text"),u.setAttribute("id","description"),e.appendChild(s),e.appendChild(u);const l=document.createElement("div"),p=document.createElement("button"),m=document.createElement("button");return p.innerHTML="Submit",m.innerHTML="Cancel",m.addEventListener("click",H),p.addEventListener("click",O),l.appendChild(p),l.appendChild(m),e.appendChild(l),u.addEventListener("keyup",(function(e){e.preventDefault(),13===e.keyCode&&O()})),n.addEventListener("keyup",(function(e){e.preventDefault(),13===e.keyCode&&O()})),o.addEventListener("keyup",(function(e){e.preventDefault(),13===e.keyCode&&O()})),e}())),document.querySelector("#title").focus()},F=function(){const e=document.querySelector("#addProjectInput").value;if(""===e)return void alert("please name your project!");const t=document.querySelector("#projectList"),n=document.querySelector("#addProject");z[e]?alert("projects must be a different name!"):(t.removeChild(n),v(e),R(e),t.appendChild(I()))},W=function(){if(console.log(this),this.firstElementChild&&"INPUT"===this.firstElementChild.tagName)return;const e=this.innerText;console.log(e),S(e),k(e)},J=function(e){const t=this.parentNode.parentNode;console.log(t),$(t.innerText),function(e){e.remove();const t=document.querySelector(".project");console.log(t),S(t.innerText),k(t.innerText),console.log(t.innerText)}(t),e.stopPropagation()},Y=function(e){let t=this.parentNode.parentNode;const n=t.innerText;console.log(t,n),S(n),k(n);const o=document.createElement("input");o.setAttribute("autofocus","true"),o.setAttribute("type","text"),o.setAttribute("id","editProjectInput"),t.innerText="",o.value=n,o.addEventListener("keyup",(function(e){if(e.preventDefault(),13===e.keyCode){const e=o.value;!function(e,t){_(e,t)}(n,e),t.innerText=e,t.appendChild(q()),S(e),k(e)}})),t.appendChild(o),document.querySelector("#editProjectInput").focus(),e.stopPropagation()},Z=window.localStorage,R=function(e){z[e]={tasks:[],description:""},Z.setItem(e,JSON.stringify({tasks:[],description:""}))},U=function(e){const t=z[e];Z.removeItem(e),Z.setItem(e,JSON.stringify(t))},$=function(e){z[e],z["today's tasks"].tasks.forEach(((t,n,o)=>{t.project===e&&o.splice(n,1)})),X(),Z.removeItem(e),delete z[e]},X=function(){const e=z["today's tasks"];Z.removeItem(e),Z.setItem("today's tasks",JSON.stringify(e))},_=function(e,t){const n=z[e];z[t]=n,Z.removeItem(e),Z.setItem(t,JSON.stringify(n)),delete z[e]};document.querySelector("#addTask"),document.querySelector("#container"),document.querySelectorAll(".project"),document.querySelectorAll(".task"),window.localStorage;let z={};!function(){if(0===window.localStorage.length){z["default project"]={tasks:[],description:""},z["today's tasks"]={tasks:[],description:""},Z.setItem("today's tasks",JSON.stringify(z["today's tasks"])),z["default project"].tasks.push(function(e,t,n,o){const r={title:"default task",description:"",date:"",priority:"Low"};return r}()),Z.setItem("default project",JSON.stringify(z["default project"])),h();const e=Object.keys(z)[0];S(e),k(e)}else{Object.keys(window.localStorage).forEach((function(e){z[e]=JSON.parse(window.localStorage.getItem(e))})),h();const e=Object.keys(z)[0];S(e),k(e)}}()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5qcyIsIm1hcHBpbmdzIjoid0ZBR0lBLEUsTUFBMEIsR0FBNEIsS0FFMURBLEVBQXdCQyxLQUFLLENBQUNDLEVBQU9DLEdBQUkscTRCQUFzNEIsR0FBRyxDQUFDLFFBQVUsRUFBRSxRQUFVLENBQUMsNkJBQTZCLE1BQVEsR0FBRyxTQUFXLGtiQUFrYixlQUFpQixDQUFDLHM0QkFBczRCLFdBQWEsTUFFcDFFLFcsUUNEQUQsRUFBT0UsUUFBVSxTQUFVQyxHQUN6QixJQUFJQyxFQUFPLEdBNkZYLE9BM0ZBQSxFQUFLQyxTQUFXLFdBQ2QsT0FBT0MsS0FBS0MsS0FBSSxTQUFVQyxHQUN4QixJQUFJQyxFQUFVLEdBQ1ZDLE9BQStCLElBQVpGLEVBQUssR0E0QjVCLE9BMUJJQSxFQUFLLEtBQ1BDLEdBQVcsY0FBY0UsT0FBT0gsRUFBSyxHQUFJLFFBR3ZDQSxFQUFLLEtBQ1BDLEdBQVcsVUFBVUUsT0FBT0gsRUFBSyxHQUFJLE9BR25DRSxJQUNGRCxHQUFXLFNBQVNFLE9BQU9ILEVBQUssR0FBR0ksT0FBUyxFQUFJLElBQUlELE9BQU9ILEVBQUssSUFBTSxHQUFJLE9BRzVFQyxHQUFXTixFQUF1QkssR0FFOUJFLElBQ0ZELEdBQVcsS0FHVEQsRUFBSyxLQUNQQyxHQUFXLEtBR1RELEVBQUssS0FDUEMsR0FBVyxLQUdOQSxLQUNOSSxLQUFLLEtBSVZULEVBQUtVLEVBQUksU0FBV0MsRUFBU0MsRUFBT0MsRUFBUUMsRUFBVUMsR0FDN0IsaUJBQVpKLElBQ1RBLEVBQVUsQ0FBQyxDQUFDLEtBQU1BLE9BQVNLLEtBRzdCLElBQUlDLEVBQXlCLEdBRTdCLEdBQUlKLEVBQ0YsSUFBSyxJQUFJSyxFQUFJLEVBQUdBLEVBQUloQixLQUFLTSxPQUFRVSxJQUFLLENBQ3BDLElBQUlyQixFQUFLSyxLQUFLZ0IsR0FBRyxHQUVQLE1BQU5yQixJQUNGb0IsRUFBdUJwQixJQUFNLEdBS25DLElBQUssSUFBSXNCLEVBQUssRUFBR0EsRUFBS1IsRUFBUUgsT0FBUVcsSUFBTSxDQUMxQyxJQUFJZixFQUFPLEdBQUdHLE9BQU9JLEVBQVFRLElBRXpCTixHQUFVSSxFQUF1QmIsRUFBSyxXQUlyQixJQUFWVyxTQUNjLElBQVpYLEVBQUssS0FHZEEsRUFBSyxHQUFLLFNBQVNHLE9BQU9ILEVBQUssR0FBR0ksT0FBUyxFQUFJLElBQUlELE9BQU9ILEVBQUssSUFBTSxHQUFJLE1BQU1HLE9BQU9ILEVBQUssR0FBSSxNQUYvRkEsRUFBSyxHQUFLVyxHQU9WSCxJQUNHUixFQUFLLElBR1JBLEVBQUssR0FBSyxVQUFVRyxPQUFPSCxFQUFLLEdBQUksTUFBTUcsT0FBT0gsRUFBSyxHQUFJLEtBQzFEQSxFQUFLLEdBQUtRLEdBSFZSLEVBQUssR0FBS1EsR0FPVkUsSUFDR1YsRUFBSyxJQUdSQSxFQUFLLEdBQUssY0FBY0csT0FBT0gsRUFBSyxHQUFJLE9BQU9HLE9BQU9ILEVBQUssR0FBSSxLQUMvREEsRUFBSyxHQUFLVSxHQUhWVixFQUFLLEdBQUssR0FBR0csT0FBT08sSUFPeEJkLEVBQUtMLEtBQUtTLE1BSVBKLEksUUNsR1RKLEVBQU9FLFFBQVUsU0FBVU0sR0FDekIsSUFBSUMsRUFBVUQsRUFBSyxHQUNmZ0IsRUFBYWhCLEVBQUssR0FFdEIsSUFBS2dCLEVBQ0gsT0FBT2YsRUFHVCxHQUFvQixtQkFBVGdCLEtBQXFCLENBQzlCLElBQUlDLEVBQVNELEtBQUtFLFNBQVNDLG1CQUFtQkMsS0FBS0MsVUFBVU4sTUFDekRPLEVBQU8sK0RBQStEcEIsT0FBT2UsR0FDN0VNLEVBQWdCLE9BQU9yQixPQUFPb0IsRUFBTSxPQUNwQ0UsRUFBYVQsRUFBV1UsUUFBUTNCLEtBQUksU0FBVTRCLEdBQ2hELE1BQU8saUJBQWlCeEIsT0FBT2EsRUFBV1ksWUFBYyxJQUFJekIsT0FBT3dCLEVBQVEsVUFFN0UsTUFBTyxDQUFDMUIsR0FBU0UsT0FBT3NCLEdBQVl0QixPQUFPLENBQUNxQixJQUFnQm5CLEtBQUssTUFHbkUsTUFBTyxDQUFDSixHQUFTSSxLQUFLLFEsUUNsQnhCLElBQUl3QixFQUFjLEdBRWxCLFNBQVNDLEVBQXFCQyxHQUc1QixJQUZBLElBQUlDLEdBQVUsRUFFTDFCLEVBQUksRUFBR0EsRUFBSXVCLEVBQVl6QixPQUFRRSxJQUN0QyxHQUFJdUIsRUFBWXZCLEdBQUd5QixhQUFlQSxFQUFZLENBQzVDQyxFQUFTMUIsRUFDVCxNQUlKLE9BQU8wQixFQUdULFNBQVNDLEVBQWFyQyxFQUFNc0MsR0FJMUIsSUFIQSxJQUFJQyxFQUFhLEdBQ2JDLEVBQWMsR0FFVDlCLEVBQUksRUFBR0EsRUFBSVYsRUFBS1EsT0FBUUUsSUFBSyxDQUNwQyxJQUFJTixFQUFPSixFQUFLVSxHQUNaYixFQUFLeUMsRUFBUUcsS0FBT3JDLEVBQUssR0FBS2tDLEVBQVFHLEtBQU9yQyxFQUFLLEdBQ2xEc0MsRUFBUUgsRUFBVzFDLElBQU8sRUFDMUJzQyxFQUFhLEdBQUc1QixPQUFPVixFQUFJLEtBQUtVLE9BQU9tQyxHQUMzQ0gsRUFBVzFDLEdBQU02QyxFQUFRLEVBQ3pCLElBQUlDLEVBQW9CVCxFQUFxQkMsR0FDekNTLEVBQU0sQ0FDUkMsSUFBS3pDLEVBQUssR0FDVlEsTUFBT1IsRUFBSyxHQUNaMEMsVUFBVzFDLEVBQUssR0FDaEJVLFNBQVVWLEVBQUssR0FDZlcsTUFBT1gsRUFBSyxJQUdkLElBQTJCLElBQXZCdUMsRUFDRlYsRUFBWVUsR0FBbUJJLGFBQy9CZCxFQUFZVSxHQUFtQkssUUFBUUosT0FDbEMsQ0FDTCxJQUFJSSxFQUFVQyxFQUFnQkwsRUFBS04sR0FDbkNBLEVBQVFZLFFBQVV4QyxFQUNsQnVCLEVBQVlrQixPQUFPekMsRUFBRyxFQUFHLENBQ3ZCeUIsV0FBWUEsRUFDWmEsUUFBU0EsRUFDVEQsV0FBWSxJQUloQlAsRUFBWTdDLEtBQUt3QyxHQUduQixPQUFPSyxFQUdULFNBQVNTLEVBQWdCTCxFQUFLTixHQUM1QixJQUFJYyxFQUFNZCxFQUFRZSxPQUFPZixHQWV6QixPQWRBYyxFQUFJRSxPQUFPVixHQUVHLFNBQWlCVyxHQUM3QixHQUFJQSxFQUFRLENBQ1YsR0FBSUEsRUFBT1YsTUFBUUQsRUFBSUMsS0FBT1UsRUFBTzNDLFFBQVVnQyxFQUFJaEMsT0FBUzJDLEVBQU9ULFlBQWNGLEVBQUlFLFdBQWFTLEVBQU96QyxXQUFhOEIsRUFBSTlCLFVBQVl5QyxFQUFPeEMsUUFBVTZCLEVBQUk3QixNQUN6SixPQUdGcUMsRUFBSUUsT0FBT1YsRUFBTVcsUUFFakJILEVBQUlJLFVBT1Y1RCxFQUFPRSxRQUFVLFNBQVVFLEVBQU1zQyxHQUcvQixJQUFJbUIsRUFBa0JwQixFQUR0QnJDLEVBQU9BLEdBQVEsR0FEZnNDLEVBQVVBLEdBQVcsSUFHckIsT0FBTyxTQUFnQm9CLEdBQ3JCQSxFQUFVQSxHQUFXLEdBRXJCLElBQUssSUFBSWhELEVBQUksRUFBR0EsRUFBSStDLEVBQWdCakQsT0FBUUUsSUFBSyxDQUMvQyxJQUNJaUQsRUFBUXpCLEVBREt1QixFQUFnQi9DLElBRWpDdUIsRUFBWTBCLEdBQU9aLGFBS3JCLElBRkEsSUFBSWEsRUFBcUJ2QixFQUFhcUIsRUFBU3BCLEdBRXRDdUIsRUFBSyxFQUFHQSxFQUFLSixFQUFnQmpELE9BQVFxRCxJQUFNLENBQ2xELElBRUlDLEVBQVM1QixFQUZLdUIsRUFBZ0JJLElBSUssSUFBbkM1QixFQUFZNkIsR0FBUWYsYUFDdEJkLEVBQVk2QixHQUFRZCxVQUVwQmYsRUFBWWtCLE9BQU9XLEVBQVEsSUFJL0JMLEVBQWtCRyxLLFFDbkd0QixJQUFJRyxFQUFPLEdBb0NYbkUsRUFBT0UsUUFWUCxTQUEwQmtFLEVBQVFDLEdBQ2hDLElBQUlDLEVBeEJOLFNBQW1CQSxHQUNqQixRQUE0QixJQUFqQkgsRUFBS0csR0FBeUIsQ0FDdkMsSUFBSUMsRUFBY0MsU0FBU0MsY0FBY0gsR0FFekMsR0FBSUksT0FBT0MsbUJBQXFCSixhQUF1QkcsT0FBT0Msa0JBQzVELElBR0VKLEVBQWNBLEVBQVlLLGdCQUFnQkMsS0FDMUMsTUFBT0MsR0FFUFAsRUFBYyxLQUlsQkosRUFBS0csR0FBVUMsRUFHakIsT0FBT0osRUFBS0csR0FNQ1MsQ0FBVVgsR0FFdkIsSUFBS0UsRUFDSCxNQUFNLElBQUlVLE1BQU0sMkdBR2xCVixFQUFPVyxZQUFZWixLLFFDekJyQnJFLEVBQU9FLFFBUFAsU0FBNEJ3QyxHQUMxQixJQUFJd0MsRUFBVVYsU0FBU1csY0FBYyxTQUdyQyxPQUZBekMsRUFBUTBDLGNBQWNGLEVBQVN4QyxFQUFRMkMsWUFDdkMzQyxFQUFRMEIsT0FBT2MsRUFBU3hDLEVBQVFBLFNBQ3pCd0MsSSxjQ0lUbEYsRUFBT0UsUUFSUCxTQUF3Q29GLEdBQ3RDLElBQUlDLEVBQW1ELEtBRW5EQSxHQUNGRCxFQUFhRSxhQUFhLFFBQVNELEssUUM4RHZDdkYsRUFBT0UsUUFaUCxTQUFnQndDLEdBQ2QsSUFBSTRDLEVBQWU1QyxFQUFRK0MsbUJBQW1CL0MsR0FDOUMsTUFBTyxDQUNMZ0IsT0FBUSxTQUFnQlYsSUF6RDVCLFNBQWVzQyxFQUFjNUMsRUFBU00sR0FDcEMsSUFBSUMsRUFBTSxHQUVORCxFQUFJOUIsV0FDTitCLEdBQU8sY0FBY3RDLE9BQU9xQyxFQUFJOUIsU0FBVSxRQUd4QzhCLEVBQUloQyxRQUNOaUMsR0FBTyxVQUFVdEMsT0FBT3FDLEVBQUloQyxNQUFPLE9BR3JDLElBQUlOLE9BQWlDLElBQWRzQyxFQUFJN0IsTUFFdkJULElBQ0Z1QyxHQUFPLFNBQVN0QyxPQUFPcUMsRUFBSTdCLE1BQU1QLE9BQVMsRUFBSSxJQUFJRCxPQUFPcUMsRUFBSTdCLE9BQVMsR0FBSSxPQUc1RThCLEdBQU9ELEVBQUlDLElBRVB2QyxJQUNGdUMsR0FBTyxLQUdMRCxFQUFJaEMsUUFDTmlDLEdBQU8sS0FHTEQsRUFBSTlCLFdBQ04rQixHQUFPLEtBR1QsSUFBSUMsRUFBWUYsRUFBSUUsVUFFaEJBLEdBQTZCLG9CQUFUekIsT0FDdEJ3QixHQUFPLHVEQUF1RHRDLE9BQU9jLEtBQUtFLFNBQVNDLG1CQUFtQkMsS0FBS0MsVUFBVW9CLE1BQWUsUUFNdElSLEVBQVFnRCxrQkFBa0J6QyxFQUFLcUMsRUFBYzVDLEVBQVFBLFNBa0JqRGlELENBQU1MLEVBQWM1QyxFQUFTTSxJQUUvQlksT0FBUSxZQWpCWixTQUE0QjBCLEdBRTFCLEdBQWdDLE9BQTVCQSxFQUFhTSxXQUNmLE9BQU8sRUFHVE4sRUFBYU0sV0FBV0MsWUFBWVAsR0FZaENRLENBQW1CUixPLFFDakR6QnRGLEVBQU9FLFFBWlAsU0FBMkIrQyxFQUFLcUMsR0FDOUIsR0FBSUEsRUFBYVMsV0FDZlQsRUFBYVMsV0FBV0MsUUFBVS9DLE1BQzdCLENBQ0wsS0FBT3FDLEVBQWFXLFlBQ2xCWCxFQUFhTyxZQUFZUCxFQUFhVyxZQUd4Q1gsRUFBYUwsWUFBWVQsU0FBUzBCLGVBQWVqRCxPLGlIQ1ZqRGtELEVBQTJCLEdBRy9CLFNBQVNDLEVBQW9CQyxHQUU1QixJQUFJQyxFQUFlSCxFQUF5QkUsR0FDNUMsUUFBcUJqRixJQUFqQmtGLEVBQ0gsT0FBT0EsRUFBYXBHLFFBR3JCLElBQUlGLEVBQVNtRyxFQUF5QkUsR0FBWSxDQUNqRHBHLEdBQUlvRyxFQUVKbkcsUUFBUyxJQU9WLE9BSEFxRyxFQUFvQkYsR0FBVXJHLEVBQVFBLEVBQU9FLFFBQVNrRyxHQUcvQ3BHLEVBQU9FLFFDcEJma0csRUFBb0JJLEVBQUt4RyxJQUN4QixJQUFJeUcsRUFBU3pHLEdBQVVBLEVBQU8wRyxXQUM3QixJQUFPMUcsRUFBaUIsUUFDeEIsSUFBTSxFQUVQLE9BREFvRyxFQUFvQk8sRUFBRUYsRUFBUSxDQUFFRyxFQUFHSCxJQUM1QkEsR0NMUkwsRUFBb0JPLEVBQUksQ0FBQ3pHLEVBQVMyRyxLQUNqQyxJQUFJLElBQUlDLEtBQU9ELEVBQ1hULEVBQW9CVyxFQUFFRixFQUFZQyxLQUFTVixFQUFvQlcsRUFBRTdHLEVBQVM0RyxJQUM1RUUsT0FBT0MsZUFBZS9HLEVBQVM0RyxFQUFLLENBQUVJLFlBQVksRUFBTUMsSUFBS04sRUFBV0MsTUNKM0VWLEVBQW9CZ0IsRUFBSSxXQUN2QixHQUEwQixpQkFBZkMsV0FBeUIsT0FBT0EsV0FDM0MsSUFDQyxPQUFPL0csTUFBUSxJQUFJZ0gsU0FBUyxjQUFiLEdBQ2QsTUFBT3hDLEdBQ1IsR0FBc0IsaUJBQVhKLE9BQXFCLE9BQU9BLFFBTGpCLEdDQXhCMEIsRUFBb0JXLEVBQUksQ0FBQy9ELEVBQUt1RSxJQUFVUCxPQUFPUSxVQUFVQyxlQUFlQyxLQUFLMUUsRUFBS3VFLEcsTUNBbEYsSUFBSUksRUFDQXZCLEVBQW9CZ0IsRUFBRVEsZ0JBQWVELEVBQVl2QixFQUFvQmdCLEVBQUVTLFNBQVcsSUFDdEYsSUFBSXJELEVBQVc0QixFQUFvQmdCLEVBQUU1QyxTQUNyQyxJQUFLbUQsR0FBYW5ELElBQ2JBLEVBQVNzRCxnQkFDWkgsRUFBWW5ELEVBQVNzRCxjQUFjQyxNQUMvQkosR0FBVyxDQUNmLElBQUlLLEVBQVV4RCxFQUFTeUQscUJBQXFCLFVBQ3pDRCxFQUFRcEgsU0FBUStHLEVBQVlLLEVBQVFBLEVBQVFwSCxPQUFTLEdBQUdtSCxLQUs3RCxJQUFLSixFQUFXLE1BQU0sSUFBSTNDLE1BQU0seURBQ2hDMkMsRUFBWUEsRUFBVU8sUUFBUSxPQUFRLElBQUlBLFFBQVEsUUFBUyxJQUFJQSxRQUFRLFlBQWEsS0FDcEY5QixFQUFvQitCLEVBQUlSLEcsNkpDSnBCakYsRUFBVSxHQUVkQSxFQUFRZ0Qsa0JBQW9CLElBQzVCaEQsRUFBUTBDLGNBQWdCLElBRWxCMUMsRUFBUTBCLE9BQVMsU0FBYyxLQUFNLFFBRTNDMUIsRUFBUWUsT0FBUyxJQUNqQmYsRUFBUStDLG1CQUFxQixJQUVoQixJQUFJLElBQVMvQyxHQUtKLEtBQVcsWUFBaUIsV0FBM0MsTUNyQk0wRixFQUFvQixXQUUvQnBCLE9BQU9xQixLQUFLQyxHQUFTQyxTQUFRLFNBQVN6QixHQUN6QixrQkFBUkEsR0FDRDBCLEVBQXFCMUIsTUFHekIyQixJQUNBQyxLQUtXQSxFQUEyQixXQUN0Q2xFLFNBQVNDLGNBQWMsZ0JBQWdCUSxZQUFZMEQsTUFHeENILEVBQXVCLFNBQVNJLEdBQ3ZCcEUsU0FBU0MsY0FBYyxnQkFDL0JRLFlBQVk0RCxFQUE4QkQsS0FHM0NFLEVBQXNCLFdBQ2pDdEUsU0FBU0MsY0FBYyxhQUFhUSxZQUFZOEQsTUFHckNDLEVBQW9CLFNBQVNDLEVBQVdDLEVBQWlCQyxFQUFVQyxHQUM5RSxNQUFNQyxFQUFjQyxFQUFrQkwsRUFBV0MsRUFBaUJDLEVBQVVDLEdBQzVFNUUsU0FBU0MsY0FBYyxhQUFhUSxZQUFZb0UsSUFHckNFLEVBQXdCLFdBQ25DLE1BQU1DLEVBQVloRixTQUFTQyxjQUFjLGVBQ25DZ0YsRUFBY2pGLFNBQVNDLGNBQWMsZ0JBQzNDZ0YsRUFBWTVELFlBQVkyRCxHQUN4QkMsRUFBWXhFLFlBQVl5RSxLQUN4QmxGLFNBQVNDLGNBQWMsb0JBQW9Ca0YsU0FHaENsQixFQUF5QixXQUNwQyxNQUFNbUIsRUFBbUJwRixTQUFTQyxjQUFjLGVBQzFDZ0YsRUFBY2pGLFNBQVNDLGNBQWMsZ0JBQ3ZDbUYsR0FDRkgsRUFBWXhFLFlBQVk0RSxNQVdmQyxFQUFpQixTQUFTbEIsSUFQVixXQUMzQixNQUFNbUIsRUFBU3ZGLFNBQVNDLGNBQWMsYUFDdEMsS0FBT3NGLEVBQU85RCxZQUNWOEQsRUFBT2xFLFlBQVlrRSxFQUFPOUQsWUFROUIrRCxHQUNHMUIsRUFBUU0sR0FDVE4sRUFBUU0sR0FBYXFCLE1BQU0xQixTQUFRckQsSUFDakM4RCxFQUFrQjlELEVBQVFnRixNQUFPaEYsRUFBUWlGLFlBQWFqRixFQUFRa0YsS0FBTWxGLEVBQVFtRixhQUc5RUMsUUFBUUMsSUFBSSxzQkFHZHpCLEtBU1cwQixFQUFrQixTQUFTTixHQUN0QyxNQUFNTyxFQUFLakcsU0FBU1csY0FBYyxNQUNsQ3NGLEVBQUdDLFVBQVlSLEVBQ2YsTUFBTVMsRUFBZW5HLFNBQVNDLGNBQWMsaUJBQ3RDbUUsRUFBYytCLEVBQWFDLGtCQUVqQ04sUUFBUUMsSUFBSUUsR0FDVDdCLEdBQ0QrQixFQUFhOUUsWUFBWStDLEdBRzNCK0IsRUFBYTFGLFlBQVl3RixJQUdkSSxFQUFzQixXQUNqQyxNQUErRCxhQUE1RHJHLFNBQVNDLGNBQWMsYUFBYXFHLGlCQUFpQjdLLEtBQ3REdUUsU0FBU0MsY0FBYyxhQUFhcUcsaUJBQWlCbEgsVUFDOUMsSSxzQkMzRkosTUFBTW1GLEVBQXNCLFdBRWpDLE1BQU1nQyxFQUFTdkcsU0FBU1csY0FBYyxVQU10QyxPQUxBNEYsRUFBT3ZGLGFBQWEsS0FBTSxXQUMxQnVGLEVBQU9DLGlCQUFpQixRQUFTQyxHQUVqQ0YsRUFBT0wsVUFBWSxXQUVaSyxHQUdJbEMsRUFBZ0MsU0FBU0QsR0FDcEQsTUFBTXNDLEVBQWlCMUcsU0FBU1csY0FBYyxPQThCOUMsT0E3QkErRixFQUFlUixVQUFZOUIsRUFDM0JzQyxFQUFlMUYsYUFBYSxRQUFRLFdBQ3BDMEYsRUFBZUYsaUJBQWlCLFFBQVFHLEdBc0J4Q0QsRUFBZWpHLFlBQVltRyxLQUtwQkYsR0FHSUUsRUFBOEIsV0FDekMsTUFBTUMsRUFBVTdHLFNBQVNXLGNBQWMsUUFFakNtRyxFQUFPLElBQUlDLE1BQ2pCRCxFQUFLdkQsSUFBTSxFQUNYdUQsRUFBS0UsVUFBVUMsSUFBSSxRQUNuQkgsRUFBS0UsVUFBVUMsSUFBSSxRQUNuQkgsRUFBS04saUJBQWlCLFFBQVNVLEdBRS9CTCxFQUFRcEcsWUFBWXFHLEdBRXBCLE1BQU1LLEVBQWEsSUFBSUosTUFRdkIsT0FQQUksRUFBVzVELElBQU0sRUFDakI0RCxFQUFXSCxVQUFVQyxJQUFJLFVBQ3pCRSxFQUFXSCxVQUFVQyxJQUFJLFFBQ3pCRSxFQUFXWCxpQkFBaUIsUUFBUVksR0FFcENQLEVBQVFwRyxZQUFZMEcsR0FFYk4sR0E4QkkzQixFQUF3QixXQUNuQyxNQUFNbUMsRUFBT3JILFNBQVNXLGNBQWMsT0FDcEMwRyxFQUFLckcsYUFBYSxLQUFNLGNBRXhCLE1BQU1zRyxFQUFRdEgsU0FBU1csY0FBYyxTQUNyQzJHLEVBQU10RyxhQUFhLE9BQVEsUUFDM0JzRyxFQUFNdEcsYUFBYSxLQUFLLG1CQUV4QixNQUFNdUcsRUFBTXZILFNBQVNXLGNBQWMsT0FHN0JzRyxFQUFNakgsU0FBU1csY0FBYyxVQUM3QjZHLEVBQVN4SCxTQUFTVyxjQUFjLFVBbUJ0QyxPQWxCQXNHLEVBQUlmLFVBQVksTUFDaEJzQixFQUFPdEIsVUFBWSxTQUNuQnNCLEVBQU9oQixpQkFBaUIsUUFBU2lCLEdBQ2pDUixFQUFJVCxpQkFBaUIsUUFBU2tCLEdBQzlCSCxFQUFJOUcsWUFBWXdHLEdBQ2hCTSxFQUFJOUcsWUFBWStHLEdBQ2hCSCxFQUFLNUcsWUFBWTZHLEdBQ2pCRCxFQUFLNUcsWUFBWThHLEdBRWpCRCxFQUFNdEcsYUFBYSxZQUFZLFFBRS9Cc0csRUFBTWQsaUJBQWlCLFNBQVMsU0FBU21CLEdBQ3ZDQSxFQUFNQyxpQkFDZSxLQUFqQkQsRUFBTUUsU0FDUkgsT0FJR0wsR0FLSWhDLEVBQXlCLFdBQ3BDLE1BQU1ELEVBQW1CcEYsU0FBU1csY0FBYyxVQUloRCxPQUhBeUUsRUFBaUJwRSxhQUFhLEtBQU0sY0FDcENvRSxFQUFpQmMsVUFBWSxjQUM3QmQsRUFBaUJvQixpQkFBaUIsUUFBU3pCLEdBQ3BDSyxHQW1HSU4sRUFBb0IsU0FBVUwsRUFBV0MsRUFBaUJDLEVBQVVDLEdBQy9FLE1BQU0yQyxFQUFNdkgsU0FBU1csY0FBYyxRQUNuQzRHLEVBQUl2RyxhQUFhLFFBQVEsU0FDekJ1RyxFQUFJTyxVQUFZckQsRUFDaEI4QyxFQUFJZixpQkFBaUIsU0FBUyxTQUFTbUIsR0FDckM3QixRQUFRQyxJQUFJakssU0FFZCxNQUFNaU0sRUFBWS9ILFNBQVNXLGNBQWMsTUFDbkNxSCxFQUFrQmhJLFNBQVNXLGNBQWMsTUFDekNzSCxFQUFXakksU0FBU1csY0FBYyxNQUNsQ3VILEVBQWVsSSxTQUFTVyxjQUFjLE1BOEI1QyxZQTNCdUIvRCxJQUFwQjhILElBQ0RBLEVBQWtCLHVCQUdKOUgsSUFBYitILElBQ0RBLEVBQVcsZ0JBR08vSCxJQUFqQmdJLElBQ0RBLEVBQWUsSUFLakJvRCxFQUFnQkYsVUFBWXBELEVBQzVCdUQsRUFBU0gsVUFBWW5ELEVBQ3JCdUQsRUFBYUosVUFBWWxELEVBRXpCbUQsRUFBVXRILFlBQVl1SCxHQUN0QkQsRUFBVXRILFlBQVl3SCxHQUN0QkYsRUFBVXRILFlBQVl5SCxHQUV0QlgsRUFBSTlHLFlBQVlzSCxHQUtUUixHQUdJcEQsRUFBMkIsV0FDdEMsTUFBTW9ELEVBQU12SCxTQUFTVyxjQUFjLE9BQ25DNEcsRUFBSXZHLGFBQWEsS0FBTSxlQUV2QixNQUFNbUgsRUFBYW5JLFNBQVNXLGNBQWMsT0FPMUMsT0FOQXdILEVBQVduSCxhQUFhLFFBQVMsV0FDakNtSCxFQUFXakMsVUFBWSxnQkFFdkJxQixFQUFJOUcsWUFBWTBILEdBQ2hCQSxFQUFXM0IsaUJBQWlCLFFBQVFHLEdBRTdCWSxHQUdJRSxFQUErQixXQUMxQyxNQUFNVyxFQUFtQnBJLFNBQVNDLGNBQWMsZUFDMUNnRixFQUFjakYsU0FBU0MsY0FBYyxnQkFDM0NnRixFQUFZNUQsWUFBWStHLEdBQ3hCbkQsRUFBWXhFLFlBQVk0RSxNQUdiZ0QsRUFBNEIsV0FDdkN2QyxRQUFRQyxJQUFJakssTUFDWnVLLElBQ0EvQixLQWNXZ0UsRUFBNEIsV0FHdkMsTUFBTUMsRUFwUDJCLFdBQ2pDLE1BQU1BLEVBQU8sR0FNYixPQUxBQSxFQUFLN0MsTUFBUTFGLFNBQVNDLGNBQWMsVUFBVXVJLE9BQVMsZUFDdkRELEVBQUs1QyxZQUFjM0YsU0FBU0MsY0FBYyxnQkFBZ0J1SSxPQUFTLEdBQ25FRCxFQUFLM0MsS0FBTzVGLFNBQVNDLGNBQWMsU0FBU3VJLE9BQVMsR0FDckRELEVBQUsxQyxTQUFXN0YsU0FBU0MsY0FBYyxhQUFhdUksT0FBUyxHQUM3REQsRUFBS0UsUUFBVXpJLFNBQVNDLGNBQWMsaUJBQWlCd0IsV0FBV3FHLFVBQzNEUyxFQTZPTUcsR0FDUHRFLEVBQWNwRSxTQUFTQyxjQUFjLGlCQUFpQm1HLGtCQUFrQjBCLFVBZjdELElBQ2ZhLEVBQ0FDLEVBQ0FDLEVBYUYvQyxRQUFRQyxJQUFJd0MsR0FFVEEsRUFBSzNDLFFBakJOK0MsRUFBUSxJQUFJRyxLQUNaRixFQUFLRyxPQUFPSixFQUFNSyxXQUFXQyxTQUFTLEVBQUcsS0FDekNKLEVBQUtFLE9BQU9KLEVBQU1PLFdBQWEsR0FBR0QsU0FBUyxFQUFHLEtBQ3ZDTixFQUFNUSxjQUVGLElBQU1OLEVBQUssSUFBTUQsS0FhNUI5RSxFQUFRLGlCQUFpQjJCLE1BQU1sSyxLQUFLZ04sR0FDcENhLEtBSXFCdEYsRUFBUU0sR0FDaEJxQixNQUFNbEssS0FBS2dOLEdBQ056RCxFQUFrQnlELEVBQUs3QyxNQUFPNkMsRUFBSzVDLFlBQWE0QyxFQUFLM0MsS0FBTTJDLEVBQUsxQyxVQUVwRndELEVBQWtCakYsR0FDbEJpQyxJQUNBN0IsRUFBa0IrRCxFQUFLN0MsTUFBTzZDLEVBQUs1QyxZQUFhNEMsRUFBSzNDLEtBQU0yQyxFQUFLMUMsVUFDaEV2QixLQUdXbUMsRUFBc0IsV0FDN0J6RyxTQUFTQyxjQUFjLGVEbFBNLFdBQ2pDLEdBQUlELFNBQVNDLGNBQWMsWUFBYSxDQUN0QyxNQUFNcUosRUFBV3RKLFNBQVNDLGNBQWMsYUFDbEMrRSxFQUFZaEYsU0FBU0MsY0FBYyxZQUN6Q3FKLEVBQVNqSSxZQUFZMkQsSUMrT3JCdUUsR0RyT0Z2SixTQUFTQyxjQUFjLGFBQWFRLFlDMkJQLFdBQzdCLE1BQU00RyxFQUFPckgsU0FBU1csY0FBYyxPQUNwQzBHLEVBQUs1TCxHQUFLLFdBRVYsTUFBTStOLEVBQWF4SixTQUFTVyxjQUFjLFNBQzFDNkksRUFBV3hJLGFBQWEsTUFBTSxTQUM5QndJLEVBQVd0RCxVQUFZLFlBRXZCLE1BQU11RCxFQUFhekosU0FBU1csY0FBYyxTQUMxQzhJLEVBQVd6SSxhQUFhLE9BQU8sUUFDL0J5SSxFQUFXekksYUFBYSxLQUFLLFNBRTdCcUcsRUFBSzVHLFlBQVkrSSxHQUNqQm5DLEVBQUs1RyxZQUFZZ0osR0FFakIsTUFBTUMsRUFBWTFKLFNBQVNXLGNBQWMsU0FDekMrSSxFQUFVMUksYUFBYSxPQUFPLFFBQzlCMEksRUFBVTFJLGFBQWEsS0FBSyxRQUM1QnFHLEVBQUs1RyxZQUFZaUosR0FFakIsTUFBTUMsRUFBZ0IzSixTQUFTVyxjQUFjLFNBQzdDZ0osRUFBYzNJLGFBQWEsTUFBTSxZQUNqQzJJLEVBQWN6RCxVQUFZLFdBQzFCLE1BQU0wRCxFQUFpQjVKLFNBQVNXLGNBQWMsVUFDOUNpSixFQUFlNUksYUFBYSxLQUFLLFlBQ2pDNEksRUFBZTVJLGFBQWEsT0FBUSxZQUVwQyxNQUFNNkksRUFBYTdKLFNBQVNXLGNBQWMsVUFDMUNrSixFQUFXN0ksYUFBYSxRQUFRLFFBQ2hDNkksRUFBVzNELFVBQVksT0FFdkIsTUFBTTRELEVBQWU5SixTQUFTVyxjQUFjLFVBQzVDbUosRUFBYTlJLGFBQWEsUUFBUyxVQUNuQzhJLEVBQWE1RCxVQUFZLFNBRXpCLE1BQU02RCxFQUFZL0osU0FBU1csY0FBYyxVQUN6Q29KLEVBQVUvSSxhQUFhLFFBQVEsT0FDL0IrSSxFQUFVN0QsVUFBWSxNQUV0QjBELEVBQWVuSixZQUFZb0osR0FDM0JELEVBQWVuSixZQUFZcUosR0FDM0JGLEVBQWVuSixZQUFZc0osR0FDM0IxQyxFQUFLNUcsWUFBWWtKLEdBQ2pCdEMsRUFBSzVHLFlBQVltSixHQUVqQixNQUFNSSxFQUFtQmhLLFNBQVNXLGNBQWMsU0FDaERxSixFQUFpQmhKLGFBQWEsTUFBTSxlQUNwQ2dKLEVBQWlCOUQsVUFBWSxtQkFDN0IsTUFBTStELEVBQW1CakssU0FBU1csY0FBYyxTQUNoRHNKLEVBQWlCakosYUFBYSxPQUFPLFFBQ3JDaUosRUFBaUJqSixhQUFhLEtBQU0sZUFFcENxRyxFQUFLNUcsWUFBWXVKLEdBQ2pCM0MsRUFBSzVHLFlBQVl3SixHQUVqQixNQUFNMUMsRUFBTXZILFNBQVNXLGNBQWMsT0FFN0J1SixFQUFTbEssU0FBU1csY0FBYyxVQUNoQzZHLEVBQVN4SCxTQUFTVyxjQUFjLFVBbUN0QyxPQWxDQXVKLEVBQU9oRSxVQUFZLFNBQ25Cc0IsRUFBT3RCLFVBQVksU0FDbkJzQixFQUFPaEIsaUJBQWlCLFFBQVM2QixHQUNqQzZCLEVBQU8xRCxpQkFBaUIsUUFBUzhCLEdBQ2pDZixFQUFJOUcsWUFBWXlKLEdBQ2hCM0MsRUFBSTlHLFlBQVkrRyxHQUVoQkgsRUFBSzVHLFlBQVk4RyxHQUlqQjBDLEVBQWlCekQsaUJBQWlCLFNBQVMsU0FBU21CLEdBQ2xEQSxFQUFNQyxpQkFDZSxLQUFqQkQsRUFBTUUsU0FDUlMsT0FJSm1CLEVBQVdqRCxpQkFBaUIsU0FBUyxTQUFTbUIsR0FDNUNBLEVBQU1DLGlCQUNlLEtBQWpCRCxFQUFNRSxTQUNSUyxPQUlKb0IsRUFBVWxELGlCQUFpQixTQUFTLFNBQVNtQixHQUMzQ0EsRUFBTUMsaUJBQ2UsS0FBakJELEVBQU1FLFNBQ1JTLE9BTUdqQixFRHhIeUM4QyxLQ3dPaERuSyxTQUFTQyxjQUFjLFVBQVVrRixTQUl0QnVDLEVBQStCLFdBQzFDLE1BQU10RCxFQUFjcEUsU0FBU0MsY0FBYyxvQkFBb0J1SSxNQUMvRCxHQUFvQixLQUFoQnBFLEVBRUYsWUFEQWdHLE1BQU0sNkJBR1IsTUFBTW5GLEVBQWNqRixTQUFTQyxjQUFjLGdCQUNyQ21JLEVBQW1CcEksU0FBU0MsY0FBYyxlQUM1QzZELEVBQVFNLEdBT1ZnRyxNQUFNLHVDQUxSbkYsRUFBWTVELFlBQVkrRyxHQUN4QnBFLEVBQXFCSSxHQUNyQmlHLEVBQXFCakcsR0FDckJhLEVBQVl4RSxZQUFZNEUsT0FVYnNCLEVBQXFCLFdBRWhDLEdBREFiLFFBQVFDLElBQUlqSyxNQUNUQSxLQUFLc0ssbUJBQXdELFVBQW5DdEssS0FBS3NLLGtCQUFrQmtFLFFBRWxELE9BRUYsTUFBTTVFLEVBQVE1SixLQUFLZ00sVUFDbkJoQyxRQUFRQyxJQUFJTCxHQUNaTSxFQUFnQk4sR0FDaEJKLEVBQWVJLElBSUowQixFQUEyQixTQUFVTyxHQUNoRCxNQUFNakIsRUFBaUI1SyxLQUFLc0YsV0FBV0EsV0FDdkMwRSxRQUFRQyxJQUFJVyxHQUNaNkQsRUFBYzdELEVBQWVvQixXRDlRRixTQUFTMUQsR0FDcENBLEVBQVloRixTQUNaLE1BQU1vTCxFQUFheEssU0FBU0MsY0FBYyxZQUMxQzZGLFFBQVFDLElBQUl5RSxHQUNaeEUsRUFBZ0J3RSxFQUFXMUMsV0FDM0J4QyxFQUFla0YsRUFBVzFDLFdBQzFCaEMsUUFBUUMsSUFBSXlFLEVBQVcxQyxXQ3lRdkIyQyxDQUFjL0QsR0FDZGlCLEVBQU0rQyxtQkFZS3hELEVBQXlCLFNBQVNTLEdBQzdDLElBQUlqQixFQUFpQjVLLEtBQUtzRixXQUFXQSxXQUNyQyxNQUFNZ0QsRUFBY3NDLEVBQWVvQixVQUNuQ2hDLFFBQVFDLElBQUlXLEVBQWdCdEMsR0FDNUI0QixFQUFnQjVCLEdBQ2hCa0IsRUFBZWxCLEdBQ2YsTUFBTXVHLEVBQVkzSyxTQUFTVyxjQUFjLFNBQ3pDZ0ssRUFBVTNKLGFBQWEsWUFBWSxRQUNuQzJKLEVBQVUzSixhQUFhLE9BQU8sUUFDOUIySixFQUFVM0osYUFBYSxLQUFLLG9CQUU1QjBGLEVBQWVvQixVQUFZLEdBQzNCNkMsRUFBVW5DLE1BQVFwRSxFQUVsQnVHLEVBQVVuRSxpQkFBaUIsU0FBUyxTQUFTbUIsR0FFM0MsR0FEQUEsRUFBTUMsaUJBQ2UsS0FBakJELEVBQU1FLFFBQWUsQ0FDdkIsTUFBTStDLEVBQVVELEVBQVVuQyxPQXpCTyxTQUFTcUMsRUFBYUQsR0FDM0RFLEVBQWdCRCxFQUFhRCxHQXlCekJHLENBQXdCM0csRUFBYXdHLEdBQ3JDbEUsRUFBZW9CLFVBQVk4QyxFQUMzQmxFLEVBQWVqRyxZQUFZbUcsS0FDM0JaLEVBQWdCNEUsR0FDaEJ0RixFQUFlc0YsT0FJbkJsRSxFQUFlakcsWUFBWWtLLEdBQzNCM0ssU0FBU0MsY0FBYyxxQkFBcUJrRixRQVU1Q3dDLEVBQU0rQyxtQkN4YkZNLEVBQWU5SyxPQUFPOEssYUFnQmZYLEVBQXVCLFNBQVNqRyxHQUMzQ04sRUFBUU0sR0RzREQsQ0FDTCxNQUFTLEdBQ1QsWUFBYyxJQ3ZEaEI0RyxFQUFhQyxRQUFRN0csRUFBYS9HLEtBQUtDLFVEcURoQyxDQUNMLE1BQVMsR0FDVCxZQUFjLE9DbkRMK0wsRUFBb0IsU0FBU2pGLEdBQ3hDLE1BQU1xRSxFQUFVM0UsRUFBUU0sR0FDeEI0RyxFQUFhRSxXQUFXOUcsR0FDeEI0RyxFQUFhQyxRQUFRN0csRUFBYS9HLEtBQUtDLFVBQVVtTCxLQUl0QzhCLEVBQWdCLFNBQVNuRyxHQUNwQk4sRUFBUU0sR0FFeEJOLEVBQVEsaUJBQWlCMkIsTUFBTTFCLFNBQVEsQ0FBQ3JELEVBQVNuQixFQUFPNEwsS0FDbkR6SyxFQUFRK0gsVUFBWXJFLEdBQ3JCK0csRUFBT3BNLE9BQU9RLEVBQU0sTUFHeEI2SixJQUVBNEIsRUFBYUUsV0FBVzlHLFVBQ2pCTixFQUFRTSxJQUtKZ0YsRUFBd0IsV0FDbkMsTUFBTWdDLEVBQWN0SCxFQUFRLGlCQUM1QmtILEVBQWFFLFdBQVdFLEdBQ3hCSixFQUFhQyxRQUFRLGdCQUFpQjVOLEtBQUtDLFVBQVU4TixLQUcxQ04sRUFBa0IsU0FBU0QsRUFBYUQsR0FDbkQsTUFBTVMsRUFBaUJ2SCxFQUFRK0csR0FDL0IvRyxFQUFROEcsR0FBV1MsRUFDbkJMLEVBQWFFLFdBQVdMLEdBQ3hCRyxFQUFhQyxRQUFRTCxFQUFTdk4sS0FBS0MsVUFBVStOLFdBQ3RDdkgsRUFBUStHLElDeERZN0ssU0FBU0MsY0FBYyxZQUMzQkQsU0FBU0MsY0FBYyxjQUN4QkQsU0FBU3NMLGlCQUFpQixZQUM3QnRMLFNBQVNzTCxpQkFBaUIsU0FDbkJwTCxPQUFPOEssYUFFNUIsSUFBSWxILEVBQVUsSUNMUyxXQUM1QixHQUFtQyxJQUEvQjVELE9BQU84SyxhQUFhNU8sT0FBYyxDRkN0QzBILEVBQVEsbUJBQXFCLENBQzNCLE1BQVMsR0FDVCxZQUFlLElBRWpCQSxFQUFRLGlCQUFtQixDQUN6QixNQUFTLEdBQ1QsWUFBZSxJQUVqQmtILEVBQWFDLFFBQVEsZ0JBQWlCNU4sS0FBS0MsVUFBVXdHLEVBQVEsbUJBQzdEQSxFQUFRLG1CQUFSLFdEMkV3QixTQUFTNEIsRUFBT0MsRUFBYUMsRUFBTUMsR0FDM0QsTUFBTTBDLEVBQU8sQ0FDYkEsTUM3RWlELGVEOEVqREEsWUM5RWlFLEdEK0VqRUEsS0MvRXFFLEdEZ0ZyRUEsU0NoRnlFLE9Ea0Z6RSxPQUFPQSxFQ2xGK0JnRCxJQUN0Q1AsRUFBYUMsUUFBUSxrQkFBbUI1TixLQUFLQyxVQUFVd0csRUFBUSxxQkVUN0RGLElBQ0EsTUFBTThCLEVBQVFsRCxPQUFPcUIsS0FBS0MsR0FBUyxHQUNuQ2tDLEVBQWdCTixHQUNoQkosRUFBZUksT0FDVixDQUNMbEQsT0FBT3FCLEtBQUszRCxPQUFPOEssY0FBY2pILFNBQVEsU0FBU3pCLEdBQ2hEd0IsRUFBUXhCLEdBQU9qRixLQUFLbU8sTUFBTXRMLE9BQU84SyxhQUFhUyxRQUFRbkosT0FFeERzQixJQUNBLE1BQU04QixFQUFRbEQsT0FBT3FCLEtBQUtDLEdBQVMsR0FDbkNrQyxFQUFnQk4sR0FDaEJKLEVBQWVJLElEUG5CZ0csSSIsInNvdXJjZXMiOlsid2VicGFjazovL3RvLWRvLWFwcC8uL3NyYy9zdHlsZS5jc3MiLCJ3ZWJwYWNrOi8vdG8tZG8tYXBwLy4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qcyIsIndlYnBhY2s6Ly90by1kby1hcHAvLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qcyIsIndlYnBhY2s6Ly90by1kby1hcHAvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanMiLCJ3ZWJwYWNrOi8vdG8tZG8tYXBwLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qcyIsIndlYnBhY2s6Ly90by1kby1hcHAvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanMiLCJ3ZWJwYWNrOi8vdG8tZG8tYXBwLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzIiwid2VicGFjazovL3RvLWRvLWFwcC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzIiwid2VicGFjazovL3RvLWRvLWFwcC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzIiwid2VicGFjazovL3RvLWRvLWFwcC93ZWJwYWNrL2Jvb3RzdHJhcCIsIndlYnBhY2s6Ly90by1kby1hcHAvd2VicGFjay9ydW50aW1lL2NvbXBhdCBnZXQgZGVmYXVsdCBleHBvcnQiLCJ3ZWJwYWNrOi8vdG8tZG8tYXBwL3dlYnBhY2svcnVudGltZS9kZWZpbmUgcHJvcGVydHkgZ2V0dGVycyIsIndlYnBhY2s6Ly90by1kby1hcHAvd2VicGFjay9ydW50aW1lL2dsb2JhbCIsIndlYnBhY2s6Ly90by1kby1hcHAvd2VicGFjay9ydW50aW1lL2hhc093blByb3BlcnR5IHNob3J0aGFuZCIsIndlYnBhY2s6Ly90by1kby1hcHAvd2VicGFjay9ydW50aW1lL3B1YmxpY1BhdGgiLCJ3ZWJwYWNrOi8vdG8tZG8tYXBwLy4vc3JjL3N0eWxlLmNzcz83MTYzIiwid2VicGFjazovL3RvLWRvLWFwcC8uL3NyYy9ET01sb2dpYy5qcyIsIndlYnBhY2s6Ly90by1kby1hcHAvLi9zcmMvbG9naWMuanMiLCJ3ZWJwYWNrOi8vdG8tZG8tYXBwLy4vc3JjL3N0b3JhZ2UuanMiLCJ3ZWJwYWNrOi8vdG8tZG8tYXBwLy4vc3JjL2FwcC5qcyIsIndlYnBhY2s6Ly90by1kby1hcHAvLi9zcmMvaW5pdGlhbGl6YXRpb24uanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgXCIjY29udGFpbmVyIHtcXG4gIGRpc3BsYXk6IGdyaWQ7XFxuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmciA1ZnI7XFxuICBncmlkLWdhcDogNXB4O1xcbiAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiAgMWZyIG1pbm1heCg4MCUsIGF1dG8pIDdmcjtcXG59XFxuXFxuI2NvbnRhaW5lciA+IDpudGgtY2hpbGQob2RkKSB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjQTlBOUE5O1xcbn1cXG4jY29udGFpbmVyID4gOm50aC1jaGlsZChldmVuKSB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjRDNEM0QzO1xcbn1cXG5cXG4jdG9kYXlzVGFza3Mge1xcbiAgY29sb3I6IHB1cnBsZTtcXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gIGJvdHRvbTogMHB4O1xcbn1cXG5cXG4jcHJvamVjdExpc3Qge1xcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xcbn1cXG5cXG5oMSB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiBzaWx2ZXI7XFxufVxcblxcbmJvZHkge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogc2lsdmVyO1xcbn1cXG5cXG4udGFzayB7XFxuICBwYWRkaW5nOiAycHg7XFxuICBtYXJnaW46IDFweDtcXG4gIGJvcmRlcjogYmxhY2s7XFxufVxcblxcbi5wcm9qZWN0IHtcXG4gIHBhZGRpbmc6IDFweDtcXG4gIGJvcmRlcjogMXB4IG91dHNldCB3aGl0ZTtcXG4gIG1pbi1oZWlnaHQ6IDIwcHg7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjOUU5RTlFO1xcbn1cXG5cXG4jdGFza0Zvcm0gPiBidXR0b24sIGxhYmVsLCBpbnB1dCwgc2VsZWN0IHtcXG4gIG1hcmdpbjogM3B4O1xcbn1cXG5cXG5kaXYgPiBidXR0b24sIGlucHV0IHtcXG4gIG1hcmdpbjogM3B4O1xcbn1cXG5cXG4jYWRkUHJvamVjdCB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjQTlBOUE5XFxufVxcblxcbi5pY29uIHtcXG4gIGhlaWdodDogMThweDtcXG4gIHdpZHRoOiAxOHB4O1xcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xcbiAgZmxvYXQ6IHJpZ2h0O1xcbn1cIiwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9zcmMvc3R5bGUuY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBO0VBQ0UsYUFBYTtFQUNiLDhCQUE4QjtFQUM5QixhQUFhO0VBQ2IsOENBQThDO0FBQ2hEOztBQUVBO0VBQ0UseUJBQXlCO0FBQzNCO0FBQ0E7RUFDRSx5QkFBeUI7QUFDM0I7O0FBRUE7RUFDRSxhQUFhO0VBQ2Isa0JBQWtCO0VBQ2xCLFdBQVc7QUFDYjs7QUFFQTtFQUNFLGtCQUFrQjtBQUNwQjs7QUFFQTtFQUNFLHdCQUF3QjtBQUMxQjs7QUFFQTtFQUNFLHdCQUF3QjtBQUMxQjs7QUFFQTtFQUNFLFlBQVk7RUFDWixXQUFXO0VBQ1gsYUFBYTtBQUNmOztBQUVBO0VBQ0UsWUFBWTtFQUNaLHdCQUF3QjtFQUN4QixnQkFBZ0I7RUFDaEIseUJBQXlCO0FBQzNCOztBQUVBO0VBQ0UsV0FBVztBQUNiOztBQUVBO0VBQ0UsV0FBVztBQUNiOztBQUVBO0VBQ0U7QUFDRjs7QUFFQTtFQUNFLFlBQVk7RUFDWixXQUFXO0VBQ1gsa0JBQWtCO0VBQ2xCLFlBQVk7QUFDZFwiLFwic291cmNlc0NvbnRlbnRcIjpbXCIjY29udGFpbmVyIHtcXG4gIGRpc3BsYXk6IGdyaWQ7XFxuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmciA1ZnI7XFxuICBncmlkLWdhcDogNXB4O1xcbiAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiAgMWZyIG1pbm1heCg4MCUsIGF1dG8pIDdmcjtcXG59XFxuXFxuI2NvbnRhaW5lciA+IDpudGgtY2hpbGQob2RkKSB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjQTlBOUE5O1xcbn1cXG4jY29udGFpbmVyID4gOm50aC1jaGlsZChldmVuKSB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjRDNEM0QzO1xcbn1cXG5cXG4jdG9kYXlzVGFza3Mge1xcbiAgY29sb3I6IHB1cnBsZTtcXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gIGJvdHRvbTogMHB4O1xcbn1cXG5cXG4jcHJvamVjdExpc3Qge1xcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xcbn1cXG5cXG5oMSB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiBzaWx2ZXI7XFxufVxcblxcbmJvZHkge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogc2lsdmVyO1xcbn1cXG5cXG4udGFzayB7XFxuICBwYWRkaW5nOiAycHg7XFxuICBtYXJnaW46IDFweDtcXG4gIGJvcmRlcjogYmxhY2s7XFxufVxcblxcbi5wcm9qZWN0IHtcXG4gIHBhZGRpbmc6IDFweDtcXG4gIGJvcmRlcjogMXB4IG91dHNldCB3aGl0ZTtcXG4gIG1pbi1oZWlnaHQ6IDIwcHg7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjOUU5RTlFO1xcbn1cXG5cXG4jdGFza0Zvcm0gPiBidXR0b24sIGxhYmVsLCBpbnB1dCwgc2VsZWN0IHtcXG4gIG1hcmdpbjogM3B4O1xcbn1cXG5cXG5kaXYgPiBidXR0b24sIGlucHV0IHtcXG4gIG1hcmdpbjogM3B4O1xcbn1cXG5cXG4jYWRkUHJvamVjdCB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjQTlBOUE5XFxufVxcblxcbi5pY29uIHtcXG4gIGhlaWdodDogMThweDtcXG4gIHdpZHRoOiAxOHB4O1xcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xcbiAgZmxvYXQ6IHJpZ2h0O1xcbn1cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qXG4gIE1JVCBMaWNlbnNlIGh0dHA6Ly93d3cub3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvbWl0LWxpY2Vuc2UucGhwXG4gIEF1dGhvciBUb2JpYXMgS29wcGVycyBAc29rcmFcbiovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKSB7XG4gIHZhciBsaXN0ID0gW107IC8vIHJldHVybiB0aGUgbGlzdCBvZiBtb2R1bGVzIGFzIGNzcyBzdHJpbmdcblxuICBsaXN0LnRvU3RyaW5nID0gZnVuY3Rpb24gdG9TdHJpbmcoKSB7XG4gICAgcmV0dXJuIHRoaXMubWFwKGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgICB2YXIgY29udGVudCA9IFwiXCI7XG4gICAgICB2YXIgbmVlZExheWVyID0gdHlwZW9mIGl0ZW1bNV0gIT09IFwidW5kZWZpbmVkXCI7XG5cbiAgICAgIGlmIChpdGVtWzRdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChpdGVtWzRdLCBcIikge1wiKTtcbiAgICAgIH1cblxuICAgICAgaWYgKGl0ZW1bMl0pIHtcbiAgICAgICAgY29udGVudCArPSBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCIge1wiKTtcbiAgICAgIH1cblxuICAgICAgaWYgKG5lZWRMYXllcikge1xuICAgICAgICBjb250ZW50ICs9IFwiQGxheWVyXCIuY29uY2F0KGl0ZW1bNV0ubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChpdGVtWzVdKSA6IFwiXCIsIFwiIHtcIik7XG4gICAgICB9XG5cbiAgICAgIGNvbnRlbnQgKz0gY3NzV2l0aE1hcHBpbmdUb1N0cmluZyhpdGVtKTtcblxuICAgICAgaWYgKG5lZWRMYXllcikge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuXG4gICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuXG4gICAgICBpZiAoaXRlbVs0XSkge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gY29udGVudDtcbiAgICB9KS5qb2luKFwiXCIpO1xuICB9OyAvLyBpbXBvcnQgYSBsaXN0IG9mIG1vZHVsZXMgaW50byB0aGUgbGlzdFxuXG5cbiAgbGlzdC5pID0gZnVuY3Rpb24gaShtb2R1bGVzLCBtZWRpYSwgZGVkdXBlLCBzdXBwb3J0cywgbGF5ZXIpIHtcbiAgICBpZiAodHlwZW9mIG1vZHVsZXMgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgIG1vZHVsZXMgPSBbW251bGwsIG1vZHVsZXMsIHVuZGVmaW5lZF1dO1xuICAgIH1cblxuICAgIHZhciBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzID0ge307XG5cbiAgICBpZiAoZGVkdXBlKSB7XG4gICAgICBmb3IgKHZhciBrID0gMDsgayA8IHRoaXMubGVuZ3RoOyBrKyspIHtcbiAgICAgICAgdmFyIGlkID0gdGhpc1trXVswXTtcblxuICAgICAgICBpZiAoaWQgIT0gbnVsbCkge1xuICAgICAgICAgIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaWRdID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIGZvciAodmFyIF9rID0gMDsgX2sgPCBtb2R1bGVzLmxlbmd0aDsgX2srKykge1xuICAgICAgdmFyIGl0ZW0gPSBbXS5jb25jYXQobW9kdWxlc1tfa10pO1xuXG4gICAgICBpZiAoZGVkdXBlICYmIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaXRlbVswXV0pIHtcbiAgICAgICAgY29udGludWU7XG4gICAgICB9XG5cbiAgICAgIGlmICh0eXBlb2YgbGF5ZXIgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBpdGVtWzVdID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgICAgaXRlbVs1XSA9IGxheWVyO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBsYXllclwiLmNvbmNhdChpdGVtWzVdLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQoaXRlbVs1XSkgOiBcIlwiLCBcIiB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVs1XSA9IGxheWVyO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGlmIChtZWRpYSkge1xuICAgICAgICBpZiAoIWl0ZW1bMl0pIHtcbiAgICAgICAgICBpdGVtWzJdID0gbWVkaWE7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQG1lZGlhIFwiLmNvbmNhdChpdGVtWzJdLCBcIiB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVsyXSA9IG1lZGlhO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGlmIChzdXBwb3J0cykge1xuICAgICAgICBpZiAoIWl0ZW1bNF0pIHtcbiAgICAgICAgICBpdGVtWzRdID0gXCJcIi5jb25jYXQoc3VwcG9ydHMpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KGl0ZW1bNF0sIFwiKSB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVs0XSA9IHN1cHBvcnRzO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGxpc3QucHVzaChpdGVtKTtcbiAgICB9XG4gIH07XG5cbiAgcmV0dXJuIGxpc3Q7XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdGVtKSB7XG4gIHZhciBjb250ZW50ID0gaXRlbVsxXTtcbiAgdmFyIGNzc01hcHBpbmcgPSBpdGVtWzNdO1xuXG4gIGlmICghY3NzTWFwcGluZykge1xuICAgIHJldHVybiBjb250ZW50O1xuICB9XG5cbiAgaWYgKHR5cGVvZiBidG9hID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICB2YXIgYmFzZTY0ID0gYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoY3NzTWFwcGluZykpKSk7XG4gICAgdmFyIGRhdGEgPSBcInNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LFwiLmNvbmNhdChiYXNlNjQpO1xuICAgIHZhciBzb3VyY2VNYXBwaW5nID0gXCIvKiMgXCIuY29uY2F0KGRhdGEsIFwiICovXCIpO1xuICAgIHZhciBzb3VyY2VVUkxzID0gY3NzTWFwcGluZy5zb3VyY2VzLm1hcChmdW5jdGlvbiAoc291cmNlKSB7XG4gICAgICByZXR1cm4gXCIvKiMgc291cmNlVVJMPVwiLmNvbmNhdChjc3NNYXBwaW5nLnNvdXJjZVJvb3QgfHwgXCJcIikuY29uY2F0KHNvdXJjZSwgXCIgKi9cIik7XG4gICAgfSk7XG4gICAgcmV0dXJuIFtjb250ZW50XS5jb25jYXQoc291cmNlVVJMcykuY29uY2F0KFtzb3VyY2VNYXBwaW5nXSkuam9pbihcIlxcblwiKTtcbiAgfVxuXG4gIHJldHVybiBbY29udGVudF0uam9pbihcIlxcblwiKTtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBzdHlsZXNJbkRPTSA9IFtdO1xuXG5mdW5jdGlvbiBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKSB7XG4gIHZhciByZXN1bHQgPSAtMTtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IHN0eWxlc0luRE9NLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKHN0eWxlc0luRE9NW2ldLmlkZW50aWZpZXIgPT09IGlkZW50aWZpZXIpIHtcbiAgICAgIHJlc3VsdCA9IGk7XG4gICAgICBicmVhaztcbiAgICB9XG4gIH1cblxuICByZXR1cm4gcmVzdWx0O1xufVxuXG5mdW5jdGlvbiBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucykge1xuICB2YXIgaWRDb3VudE1hcCA9IHt9O1xuICB2YXIgaWRlbnRpZmllcnMgPSBbXTtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IGxpc3QubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgaXRlbSA9IGxpc3RbaV07XG4gICAgdmFyIGlkID0gb3B0aW9ucy5iYXNlID8gaXRlbVswXSArIG9wdGlvbnMuYmFzZSA6IGl0ZW1bMF07XG4gICAgdmFyIGNvdW50ID0gaWRDb3VudE1hcFtpZF0gfHwgMDtcbiAgICB2YXIgaWRlbnRpZmllciA9IFwiXCIuY29uY2F0KGlkLCBcIiBcIikuY29uY2F0KGNvdW50KTtcbiAgICBpZENvdW50TWFwW2lkXSA9IGNvdW50ICsgMTtcbiAgICB2YXIgaW5kZXhCeUlkZW50aWZpZXIgPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICB2YXIgb2JqID0ge1xuICAgICAgY3NzOiBpdGVtWzFdLFxuICAgICAgbWVkaWE6IGl0ZW1bMl0sXG4gICAgICBzb3VyY2VNYXA6IGl0ZW1bM10sXG4gICAgICBzdXBwb3J0czogaXRlbVs0XSxcbiAgICAgIGxheWVyOiBpdGVtWzVdXG4gICAgfTtcblxuICAgIGlmIChpbmRleEJ5SWRlbnRpZmllciAhPT0gLTEpIHtcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4QnlJZGVudGlmaWVyXS5yZWZlcmVuY2VzKys7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleEJ5SWRlbnRpZmllcl0udXBkYXRlcihvYmopO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgdXBkYXRlciA9IGFkZEVsZW1lbnRTdHlsZShvYmosIG9wdGlvbnMpO1xuICAgICAgb3B0aW9ucy5ieUluZGV4ID0gaTtcbiAgICAgIHN0eWxlc0luRE9NLnNwbGljZShpLCAwLCB7XG4gICAgICAgIGlkZW50aWZpZXI6IGlkZW50aWZpZXIsXG4gICAgICAgIHVwZGF0ZXI6IHVwZGF0ZXIsXG4gICAgICAgIHJlZmVyZW5jZXM6IDFcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIGlkZW50aWZpZXJzLnB1c2goaWRlbnRpZmllcik7XG4gIH1cblxuICByZXR1cm4gaWRlbnRpZmllcnM7XG59XG5cbmZ1bmN0aW9uIGFkZEVsZW1lbnRTdHlsZShvYmosIG9wdGlvbnMpIHtcbiAgdmFyIGFwaSA9IG9wdGlvbnMuZG9tQVBJKG9wdGlvbnMpO1xuICBhcGkudXBkYXRlKG9iaik7XG5cbiAgdmFyIHVwZGF0ZXIgPSBmdW5jdGlvbiB1cGRhdGVyKG5ld09iaikge1xuICAgIGlmIChuZXdPYmopIHtcbiAgICAgIGlmIChuZXdPYmouY3NzID09PSBvYmouY3NzICYmIG5ld09iai5tZWRpYSA9PT0gb2JqLm1lZGlhICYmIG5ld09iai5zb3VyY2VNYXAgPT09IG9iai5zb3VyY2VNYXAgJiYgbmV3T2JqLnN1cHBvcnRzID09PSBvYmouc3VwcG9ydHMgJiYgbmV3T2JqLmxheWVyID09PSBvYmoubGF5ZXIpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBhcGkudXBkYXRlKG9iaiA9IG5ld09iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIGFwaS5yZW1vdmUoKTtcbiAgICB9XG4gIH07XG5cbiAgcmV0dXJuIHVwZGF0ZXI7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGxpc3QsIG9wdGlvbnMpIHtcbiAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG4gIGxpc3QgPSBsaXN0IHx8IFtdO1xuICB2YXIgbGFzdElkZW50aWZpZXJzID0gbW9kdWxlc1RvRG9tKGxpc3QsIG9wdGlvbnMpO1xuICByZXR1cm4gZnVuY3Rpb24gdXBkYXRlKG5ld0xpc3QpIHtcbiAgICBuZXdMaXN0ID0gbmV3TGlzdCB8fCBbXTtcblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgaWRlbnRpZmllciA9IGxhc3RJZGVudGlmaWVyc1tpXTtcbiAgICAgIHZhciBpbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpO1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhdLnJlZmVyZW5jZXMtLTtcbiAgICB9XG5cbiAgICB2YXIgbmV3TGFzdElkZW50aWZpZXJzID0gbW9kdWxlc1RvRG9tKG5ld0xpc3QsIG9wdGlvbnMpO1xuXG4gICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IGxhc3RJZGVudGlmaWVycy5sZW5ndGg7IF9pKyspIHtcbiAgICAgIHZhciBfaWRlbnRpZmllciA9IGxhc3RJZGVudGlmaWVyc1tfaV07XG5cbiAgICAgIHZhciBfaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihfaWRlbnRpZmllcik7XG5cbiAgICAgIGlmIChzdHlsZXNJbkRPTVtfaW5kZXhdLnJlZmVyZW5jZXMgPT09IDApIHtcbiAgICAgICAgc3R5bGVzSW5ET01bX2luZGV4XS51cGRhdGVyKCk7XG5cbiAgICAgICAgc3R5bGVzSW5ET00uc3BsaWNlKF9pbmRleCwgMSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgbGFzdElkZW50aWZpZXJzID0gbmV3TGFzdElkZW50aWZpZXJzO1xuICB9O1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxudmFyIG1lbW8gPSB7fTtcbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuXG5mdW5jdGlvbiBnZXRUYXJnZXQodGFyZ2V0KSB7XG4gIGlmICh0eXBlb2YgbWVtb1t0YXJnZXRdID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgdmFyIHN0eWxlVGFyZ2V0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0YXJnZXQpOyAvLyBTcGVjaWFsIGNhc2UgdG8gcmV0dXJuIGhlYWQgb2YgaWZyYW1lIGluc3RlYWQgb2YgaWZyYW1lIGl0c2VsZlxuXG4gICAgaWYgKHdpbmRvdy5IVE1MSUZyYW1lRWxlbWVudCAmJiBzdHlsZVRhcmdldCBpbnN0YW5jZW9mIHdpbmRvdy5IVE1MSUZyYW1lRWxlbWVudCkge1xuICAgICAgdHJ5IHtcbiAgICAgICAgLy8gVGhpcyB3aWxsIHRocm93IGFuIGV4Y2VwdGlvbiBpZiBhY2Nlc3MgdG8gaWZyYW1lIGlzIGJsb2NrZWRcbiAgICAgICAgLy8gZHVlIHRvIGNyb3NzLW9yaWdpbiByZXN0cmljdGlvbnNcbiAgICAgICAgc3R5bGVUYXJnZXQgPSBzdHlsZVRhcmdldC5jb250ZW50RG9jdW1lbnQuaGVhZDtcbiAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgLy8gaXN0YW5idWwgaWdub3JlIG5leHRcbiAgICAgICAgc3R5bGVUYXJnZXQgPSBudWxsO1xuICAgICAgfVxuICAgIH1cblxuICAgIG1lbW9bdGFyZ2V0XSA9IHN0eWxlVGFyZ2V0O1xuICB9XG5cbiAgcmV0dXJuIG1lbW9bdGFyZ2V0XTtcbn1cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuXG5cbmZ1bmN0aW9uIGluc2VydEJ5U2VsZWN0b3IoaW5zZXJ0LCBzdHlsZSkge1xuICB2YXIgdGFyZ2V0ID0gZ2V0VGFyZ2V0KGluc2VydCk7XG5cbiAgaWYgKCF0YXJnZXQpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJDb3VsZG4ndCBmaW5kIGEgc3R5bGUgdGFyZ2V0LiBUaGlzIHByb2JhYmx5IG1lYW5zIHRoYXQgdGhlIHZhbHVlIGZvciB0aGUgJ2luc2VydCcgcGFyYW1ldGVyIGlzIGludmFsaWQuXCIpO1xuICB9XG5cbiAgdGFyZ2V0LmFwcGVuZENoaWxkKHN0eWxlKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBpbnNlcnRCeVNlbGVjdG9yOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKSB7XG4gIHZhciBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInN0eWxlXCIpO1xuICBvcHRpb25zLnNldEF0dHJpYnV0ZXMoZWxlbWVudCwgb3B0aW9ucy5hdHRyaWJ1dGVzKTtcbiAgb3B0aW9ucy5pbnNlcnQoZWxlbWVudCwgb3B0aW9ucy5vcHRpb25zKTtcbiAgcmV0dXJuIGVsZW1lbnQ7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaW5zZXJ0U3R5bGVFbGVtZW50OyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIHNldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcyhzdHlsZUVsZW1lbnQpIHtcbiAgdmFyIG5vbmNlID0gdHlwZW9mIF9fd2VicGFja19ub25jZV9fICE9PSBcInVuZGVmaW5lZFwiID8gX193ZWJwYWNrX25vbmNlX18gOiBudWxsO1xuXG4gIGlmIChub25jZSkge1xuICAgIHN0eWxlRWxlbWVudC5zZXRBdHRyaWJ1dGUoXCJub25jZVwiLCBub25jZSk7XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBzZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXM7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gYXBwbHkoc3R5bGVFbGVtZW50LCBvcHRpb25zLCBvYmopIHtcbiAgdmFyIGNzcyA9IFwiXCI7XG5cbiAgaWYgKG9iai5zdXBwb3J0cykge1xuICAgIGNzcyArPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KG9iai5zdXBwb3J0cywgXCIpIHtcIik7XG4gIH1cblxuICBpZiAob2JqLm1lZGlhKSB7XG4gICAgY3NzICs9IFwiQG1lZGlhIFwiLmNvbmNhdChvYmoubWVkaWEsIFwiIHtcIik7XG4gIH1cblxuICB2YXIgbmVlZExheWVyID0gdHlwZW9mIG9iai5sYXllciAhPT0gXCJ1bmRlZmluZWRcIjtcblxuICBpZiAobmVlZExheWVyKSB7XG4gICAgY3NzICs9IFwiQGxheWVyXCIuY29uY2F0KG9iai5sYXllci5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KG9iai5sYXllcikgOiBcIlwiLCBcIiB7XCIpO1xuICB9XG5cbiAgY3NzICs9IG9iai5jc3M7XG5cbiAgaWYgKG5lZWRMYXllcikge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuXG4gIGlmIChvYmoubWVkaWEpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cblxuICBpZiAob2JqLnN1cHBvcnRzKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG5cbiAgdmFyIHNvdXJjZU1hcCA9IG9iai5zb3VyY2VNYXA7XG5cbiAgaWYgKHNvdXJjZU1hcCAmJiB0eXBlb2YgYnRvYSAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgIGNzcyArPSBcIlxcbi8qIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsXCIuY29uY2F0KGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KHNvdXJjZU1hcCkpKSksIFwiICovXCIpO1xuICB9IC8vIEZvciBvbGQgSUVcblxuICAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgICovXG5cblxuICBvcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtKGNzcywgc3R5bGVFbGVtZW50LCBvcHRpb25zLm9wdGlvbnMpO1xufVxuXG5mdW5jdGlvbiByZW1vdmVTdHlsZUVsZW1lbnQoc3R5bGVFbGVtZW50KSB7XG4gIC8vIGlzdGFuYnVsIGlnbm9yZSBpZlxuICBpZiAoc3R5bGVFbGVtZW50LnBhcmVudE5vZGUgPT09IG51bGwpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICBzdHlsZUVsZW1lbnQucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChzdHlsZUVsZW1lbnQpO1xufVxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5cblxuZnVuY3Rpb24gZG9tQVBJKG9wdGlvbnMpIHtcbiAgdmFyIHN0eWxlRWxlbWVudCA9IG9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMpO1xuICByZXR1cm4ge1xuICAgIHVwZGF0ZTogZnVuY3Rpb24gdXBkYXRlKG9iaikge1xuICAgICAgYXBwbHkoc3R5bGVFbGVtZW50LCBvcHRpb25zLCBvYmopO1xuICAgIH0sXG4gICAgcmVtb3ZlOiBmdW5jdGlvbiByZW1vdmUoKSB7XG4gICAgICByZW1vdmVTdHlsZUVsZW1lbnQoc3R5bGVFbGVtZW50KTtcbiAgICB9XG4gIH07XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZG9tQVBJOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIHN0eWxlVGFnVHJhbnNmb3JtKGNzcywgc3R5bGVFbGVtZW50KSB7XG4gIGlmIChzdHlsZUVsZW1lbnQuc3R5bGVTaGVldCkge1xuICAgIHN0eWxlRWxlbWVudC5zdHlsZVNoZWV0LmNzc1RleHQgPSBjc3M7XG4gIH0gZWxzZSB7XG4gICAgd2hpbGUgKHN0eWxlRWxlbWVudC5maXJzdENoaWxkKSB7XG4gICAgICBzdHlsZUVsZW1lbnQucmVtb3ZlQ2hpbGQoc3R5bGVFbGVtZW50LmZpcnN0Q2hpbGQpO1xuICAgIH1cblxuICAgIHN0eWxlRWxlbWVudC5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShjc3MpKTtcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHN0eWxlVGFnVHJhbnNmb3JtOyIsIi8vIFRoZSBtb2R1bGUgY2FjaGVcbnZhciBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18gPSB7fTtcblxuLy8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbmZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG5cdHZhciBjYWNoZWRNb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdO1xuXHRpZiAoY2FjaGVkTW9kdWxlICE9PSB1bmRlZmluZWQpIHtcblx0XHRyZXR1cm4gY2FjaGVkTW9kdWxlLmV4cG9ydHM7XG5cdH1cblx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcblx0dmFyIG1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF0gPSB7XG5cdFx0aWQ6IG1vZHVsZUlkLFxuXHRcdC8vIG5vIG1vZHVsZS5sb2FkZWQgbmVlZGVkXG5cdFx0ZXhwb3J0czoge31cblx0fTtcblxuXHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cblx0X193ZWJwYWNrX21vZHVsZXNfX1ttb2R1bGVJZF0obW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cblx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcblx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xufVxuXG4iLCIvLyBnZXREZWZhdWx0RXhwb3J0IGZ1bmN0aW9uIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbm9uLWhhcm1vbnkgbW9kdWxlc1xuX193ZWJwYWNrX3JlcXVpcmVfXy5uID0gKG1vZHVsZSkgPT4ge1xuXHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cblx0XHQoKSA9PiAobW9kdWxlWydkZWZhdWx0J10pIDpcblx0XHQoKSA9PiAobW9kdWxlKTtcblx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgeyBhOiBnZXR0ZXIgfSk7XG5cdHJldHVybiBnZXR0ZXI7XG59OyIsIi8vIGRlZmluZSBnZXR0ZXIgZnVuY3Rpb25zIGZvciBoYXJtb255IGV4cG9ydHNcbl9fd2VicGFja19yZXF1aXJlX18uZCA9IChleHBvcnRzLCBkZWZpbml0aW9uKSA9PiB7XG5cdGZvcih2YXIga2V5IGluIGRlZmluaXRpb24pIHtcblx0XHRpZihfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZGVmaW5pdGlvbiwga2V5KSAmJiAhX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIGtleSkpIHtcblx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBrZXksIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBkZWZpbml0aW9uW2tleV0gfSk7XG5cdFx0fVxuXHR9XG59OyIsIl9fd2VicGFja19yZXF1aXJlX18uZyA9IChmdW5jdGlvbigpIHtcblx0aWYgKHR5cGVvZiBnbG9iYWxUaGlzID09PSAnb2JqZWN0JykgcmV0dXJuIGdsb2JhbFRoaXM7XG5cdHRyeSB7XG5cdFx0cmV0dXJuIHRoaXMgfHwgbmV3IEZ1bmN0aW9uKCdyZXR1cm4gdGhpcycpKCk7XG5cdH0gY2F0Y2ggKGUpIHtcblx0XHRpZiAodHlwZW9mIHdpbmRvdyA9PT0gJ29iamVjdCcpIHJldHVybiB3aW5kb3c7XG5cdH1cbn0pKCk7IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5vID0gKG9iaiwgcHJvcCkgPT4gKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIHByb3ApKSIsInZhciBzY3JpcHRVcmw7XG5pZiAoX193ZWJwYWNrX3JlcXVpcmVfXy5nLmltcG9ydFNjcmlwdHMpIHNjcmlwdFVybCA9IF9fd2VicGFja19yZXF1aXJlX18uZy5sb2NhdGlvbiArIFwiXCI7XG52YXIgZG9jdW1lbnQgPSBfX3dlYnBhY2tfcmVxdWlyZV9fLmcuZG9jdW1lbnQ7XG5pZiAoIXNjcmlwdFVybCAmJiBkb2N1bWVudCkge1xuXHRpZiAoZG9jdW1lbnQuY3VycmVudFNjcmlwdClcblx0XHRzY3JpcHRVcmwgPSBkb2N1bWVudC5jdXJyZW50U2NyaXB0LnNyY1xuXHRpZiAoIXNjcmlwdFVybCkge1xuXHRcdHZhciBzY3JpcHRzID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCJzY3JpcHRcIik7XG5cdFx0aWYoc2NyaXB0cy5sZW5ndGgpIHNjcmlwdFVybCA9IHNjcmlwdHNbc2NyaXB0cy5sZW5ndGggLSAxXS5zcmNcblx0fVxufVxuLy8gV2hlbiBzdXBwb3J0aW5nIGJyb3dzZXJzIHdoZXJlIGFuIGF1dG9tYXRpYyBwdWJsaWNQYXRoIGlzIG5vdCBzdXBwb3J0ZWQgeW91IG11c3Qgc3BlY2lmeSBhbiBvdXRwdXQucHVibGljUGF0aCBtYW51YWxseSB2aWEgY29uZmlndXJhdGlvblxuLy8gb3IgcGFzcyBhbiBlbXB0eSBzdHJpbmcgKFwiXCIpIGFuZCBzZXQgdGhlIF9fd2VicGFja19wdWJsaWNfcGF0aF9fIHZhcmlhYmxlIGZyb20geW91ciBjb2RlIHRvIHVzZSB5b3VyIG93biBsb2dpYy5cbmlmICghc2NyaXB0VXJsKSB0aHJvdyBuZXcgRXJyb3IoXCJBdXRvbWF0aWMgcHVibGljUGF0aCBpcyBub3Qgc3VwcG9ydGVkIGluIHRoaXMgYnJvd3NlclwiKTtcbnNjcmlwdFVybCA9IHNjcmlwdFVybC5yZXBsYWNlKC8jLiokLywgXCJcIikucmVwbGFjZSgvXFw/LiokLywgXCJcIikucmVwbGFjZSgvXFwvW15cXC9dKyQvLCBcIi9cIik7XG5fX3dlYnBhY2tfcmVxdWlyZV9fLnAgPSBzY3JpcHRVcmw7IiwiXG4gICAgICBpbXBvcnQgQVBJIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCI7XG4gICAgICBpbXBvcnQgZG9tQVBJIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRGbiBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanNcIjtcbiAgICAgIGltcG9ydCBzZXRBdHRyaWJ1dGVzIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0U3R5bGVFbGVtZW50IGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzXCI7XG4gICAgICBpbXBvcnQgc3R5bGVUYWdUcmFuc2Zvcm1GbiBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzXCI7XG4gICAgICBpbXBvcnQgY29udGVudCwgKiBhcyBuYW1lZEV4cG9ydCBmcm9tIFwiISEuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3N0eWxlLmNzc1wiO1xuICAgICAgXG4gICAgICBcblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybSA9IHN0eWxlVGFnVHJhbnNmb3JtRm47XG5vcHRpb25zLnNldEF0dHJpYnV0ZXMgPSBzZXRBdHRyaWJ1dGVzO1xuXG4gICAgICBvcHRpb25zLmluc2VydCA9IGluc2VydEZuLmJpbmQobnVsbCwgXCJoZWFkXCIpO1xuICAgIFxub3B0aW9ucy5kb21BUEkgPSBkb21BUEk7XG5vcHRpb25zLmluc2VydFN0eWxlRWxlbWVudCA9IGluc2VydFN0eWxlRWxlbWVudDtcblxudmFyIHVwZGF0ZSA9IEFQSShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbmV4cG9ydCAqIGZyb20gXCIhIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vc3R5bGUuY3NzXCI7XG4gICAgICAgZXhwb3J0IGRlZmF1bHQgY29udGVudCAmJiBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDogdW5kZWZpbmVkO1xuIiwiLy9hbGwgZG9tIHJlbGF0ZWQgdGhpbmdzIGdvZXMgaW4gaGVyZVxuaW1wb3J0IHtkZWZhdWx0U3RvcmFnZSwgc2F2ZVByb2plY3RUb1N0b3JhZ2UsIHNhdmVUYXNrVG9TdG9yYWdlfSBmcm9tICcuL3N0b3JhZ2UuanMnXG5pbXBvcnQge2NyZWF0ZVByb2plY3RFbGVtZW50LCBjcmVhdGVQcm9qZWN0RWxlbWVudEZyb21JbnB1dCwgY3JlYXRlQWRkUHJvamVjdEJ1dHRvbiwgY3JlYXRlQWRkVGFza0J1dHRvbiwgY3JlYXRlVGFza0VsZW1lbnQsIGNyZWF0ZUlucHV0Rm9ybSwgY3JlYXRlQWRkUHJvamVjdElucHV0LCBjcmVhdGVUb2RheXNUYXNrc0VsZW1lbnR9IGZyb20gJy4vbG9naWMuanMnXG5pbXBvcnQge3N0b3JhZ2V9IGZyb20gJy4vYXBwLmpzJ1xuXG5leHBvcnQgY29uc3QgcmVuZGVyUHJvamVjdExpc3QgPSBmdW5jdGlvbigpIHtcblxuICBPYmplY3Qua2V5cyhzdG9yYWdlKS5mb3JFYWNoKGZ1bmN0aW9uKGtleSl7XG4gICAgaWYoa2V5ICE9PSBcInRvZGF5J3MgdGFza3NcIikge1xuICAgICAgYXBwZW5kUHJvamVjdEVsZW1lbnQoa2V5KVxuICAgIH1cbiAgfSlcbiAgYXBwZW5kQWRkUHJvamVjdEJ1dHRvbigpO1xuICBhcHBlbmRUb2RheXNUYXNrc0VsZW1lbnQoKTtcblxuICAvL2RvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNwcm9qZWN0TGlzdCcpXG59XG5cbmV4cG9ydCBjb25zdCBhcHBlbmRUb2RheXNUYXNrc0VsZW1lbnQgPSBmdW5jdGlvbigpIHtcbiAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI3Byb2plY3RMaXN0JykuYXBwZW5kQ2hpbGQoY3JlYXRlVG9kYXlzVGFza3NFbGVtZW50KCkpO1xufVxuXG5leHBvcnQgY29uc3QgYXBwZW5kUHJvamVjdEVsZW1lbnQgPSBmdW5jdGlvbihwcm9qZWN0TmFtZSkge1xuICBjb25zdCBwcm9qZWN0TGlzdCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNwcm9qZWN0TGlzdCcpO1xuICBwcm9qZWN0TGlzdC5hcHBlbmRDaGlsZChjcmVhdGVQcm9qZWN0RWxlbWVudEZyb21JbnB1dChwcm9qZWN0TmFtZSkpXG59XG5cbmV4cG9ydCBjb25zdCBhcHBlbmRBZGRUYXNrQnV0dG9uID0gZnVuY3Rpb24oKSB7XG4gIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyN0YXNrTGlzdCcpLmFwcGVuZENoaWxkKGNyZWF0ZUFkZFRhc2tCdXR0b24oKSlcbn1cblxuZXhwb3J0IGNvbnN0IGFwcGVuZFRhc2tFbGVtZW50ID0gZnVuY3Rpb24odGFza1RpdGxlLCB0YXNrRGVzY3JpcHRpb24sIHRhc2tEYXRlLCB0YXNrUHJpb3JpdHkpe1xuICBjb25zdCB0YXNrRWxlbWVudCA9IGNyZWF0ZVRhc2tFbGVtZW50KHRhc2tUaXRsZSwgdGFza0Rlc2NyaXB0aW9uLCB0YXNrRGF0ZSwgdGFza1ByaW9yaXR5KTtcbiAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI3Rhc2tMaXN0JykuYXBwZW5kQ2hpbGQodGFza0VsZW1lbnQpXG59XG5cbmV4cG9ydCBjb25zdCBhcHBlbmRBZGRQcm9qZWN0SW5wdXQgPSBmdW5jdGlvbigpIHtcbiAgY29uc3QgYWRkQnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI2FkZFByb2plY3QnKVxuICBjb25zdCBwcm9qZWN0TGlzdCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNwcm9qZWN0TGlzdCcpXG4gIHByb2plY3RMaXN0LnJlbW92ZUNoaWxkKGFkZEJ1dHRvbilcbiAgcHJvamVjdExpc3QuYXBwZW5kQ2hpbGQoY3JlYXRlQWRkUHJvamVjdElucHV0KCkpXG4gIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNhZGRQcm9qZWN0SW5wdXQnKS5mb2N1cygpO1xufVxuXG5leHBvcnQgY29uc3QgYXBwZW5kQWRkUHJvamVjdEJ1dHRvbiA9IGZ1bmN0aW9uKCkge1xuICBjb25zdCBhZGRQcm9qZWN0QnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI2FkZFByb2plY3QnKVxuICBjb25zdCBwcm9qZWN0TGlzdCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNwcm9qZWN0TGlzdCcpXG4gIGlmKCFhZGRQcm9qZWN0QnV0dG9uKSB7XG4gICAgcHJvamVjdExpc3QuYXBwZW5kQ2hpbGQoY3JlYXRlQWRkUHJvamVjdEJ1dHRvbigpKVxuICB9XG59XG5cbmV4cG9ydCBjb25zdCBjbGVhclRhc2tMaXN0ID0gZnVuY3Rpb24oKSB7XG4gIGNvbnN0IHBhcmVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyN0YXNrTGlzdCcpXG4gIHdoaWxlIChwYXJlbnQuZmlyc3RDaGlsZCkge1xuICAgICAgcGFyZW50LnJlbW92ZUNoaWxkKHBhcmVudC5maXJzdENoaWxkKTtcbiAgfVxufVxuXG5leHBvcnQgY29uc3QgcmVuZGVyVGFza0xpc3QgPSBmdW5jdGlvbihwcm9qZWN0TmFtZSkge1xuICAvL3JlbW92ZSB0aGUgY3VycmVudCB0YXNrIGxpc3QgYW5kIGJyaW5nIGluIGFsbCB0aGUgYXNzb2NpYXRlZCB0YXNrcyBmcm9tIHRoZSBzdG9yYWdlIGNvbXBhcnRtZW50IG9mIG91ciBzaGl0XG4gIC8vcHJvamVjdE5hbWUgaXMgZ29pbmcgdG8gYmUgYSBzdHJpbmcgdGhhdCBpcyBhIGtleSBpbiBteSBzdG9yYWdlXG5cbiAgY2xlYXJUYXNrTGlzdCgpO1xuICBpZihzdG9yYWdlW3Byb2plY3ROYW1lXSl7XG4gICAgc3RvcmFnZVtwcm9qZWN0TmFtZV0udGFza3MuZm9yRWFjaChlbGVtZW50ID0+IHtcbiAgICAgIGFwcGVuZFRhc2tFbGVtZW50KGVsZW1lbnQudGl0bGUsIGVsZW1lbnQuZGVzY3JpcHRpb24sIGVsZW1lbnQuZGF0ZSwgZWxlbWVudC5wcmlvcml0eSlcbiAgICB9KVxuICB9IGVsc2Uge1xuICAgIGNvbnNvbGUubG9nKCdjYXRjaCByZW5kZXIgZXJyb3InKVxuICB9XG5cbiAgYXBwZW5kQWRkVGFza0J1dHRvbigpXG5cbiAgLypmb3IgKGxldCBpID0gMDsgaSA8IHN0b3JhZ2UudGFza3MubGVuZ3RoOyBpKyspIHtcbiAgICBhcHBlbmRUYXNrRWxlbWVudChzdG9yYWdlLnRhc2tzW2ldLnRpdGxlKVxuICB9XG5cbiAgKi9cbn1cblxuZXhwb3J0IGNvbnN0IHNldFByb2plY3RUaXRsZSA9IGZ1bmN0aW9uKHRpdGxlKSB7XG4gIGNvbnN0IGgzID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaDMnKVxuICBoMy5pbm5lckhUTUwgPSB0aXRsZTtcbiAgY29uc3QgcHJvamVjdFRpdGxlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI3Byb2plY3RUaXRsZScpXG4gIGNvbnN0IHByb2plY3ROYW1lID0gcHJvamVjdFRpdGxlLmZpcnN0RWxlbWVudENoaWxkO1xuXG4gIGNvbnNvbGUubG9nKGgzKTtcbiAgaWYocHJvamVjdE5hbWUpIHtcbiAgICBwcm9qZWN0VGl0bGUucmVtb3ZlQ2hpbGQocHJvamVjdE5hbWUpO1xuXG4gIH1cbiAgcHJvamVjdFRpdGxlLmFwcGVuZENoaWxkKGgzKTtcbn1cblxuZXhwb3J0IGNvbnN0IHJlbW92ZVRhc2tJbnB1dEZvcm0gPSBmdW5jdGlvbigpIHtcbiAgaWYoZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI3Rhc2tMaXN0JykubGFzdEVsZW1lbnRDaGlsZC5pZCA9PT0gJ3Rhc2tGb3JtJykge1xuICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyN0YXNrTGlzdCcpLmxhc3RFbGVtZW50Q2hpbGQucmVtb3ZlKClcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfTtcbiAgcmV0dXJuIGZhbHNlO1xuXG59XG5cbmV4cG9ydCBjb25zdCByZW1vdmVBZGRUYXNrQnV0dG9uID0gZnVuY3Rpb24oKSB7XG4gIGlmIChkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjYWRkVGFzaycpKSB7XG4gICAgY29uc3QgdGFza0xpc3QgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjdGFza0xpc3QnKVxuICAgIGNvbnN0IGFkZEJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNhZGRUYXNrJylcbiAgICB0YXNrTGlzdC5yZW1vdmVDaGlsZChhZGRCdXR0b24pXG4gIH1cblxufVxuXG5cblxuZXhwb3J0IGNvbnN0IGFwcGVuZElucHV0Rm9ybSA9IGZ1bmN0aW9uKCkge1xuICAvL3JlbW92ZSBhZGRUYXNrIGJ1dHRvbiBhbmQgdGhlbiBhcHBlbmQgSW5wdXQgZm9ybSwgYWZ0ZXIgaW5wdXQgZm9ybSBpcyBzdWJtaXR0ZWQgd2Ugd2lsbC4uLlxuICAvL2NyZWF0ZSBhIHRhc2sgZnJvbSB0aGF0IGlucHV0IGZvcm0sIHJlbW92ZSB0aGUgaW5wdXQgZm9ybSwgYXBwZW5kIHRoZSB0YXNrLCBzbGFwIHRoZSBidXR0b24gYmFjayBvblxuICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjdGFza0xpc3QnKS5hcHBlbmRDaGlsZChjcmVhdGVJbnB1dEZvcm0oKSlcblxuXG59XG5cbmV4cG9ydCBjb25zdCByZW1vdmVQcm9qZWN0ID0gZnVuY3Rpb24ocHJvamVjdE5hbWUpIHtcbiAgcHJvamVjdE5hbWUucmVtb3ZlKCk7XG4gIGNvbnN0IG5ld1Byb2plY3QgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucHJvamVjdCcpO1xuICBjb25zb2xlLmxvZyhuZXdQcm9qZWN0KVxuICBzZXRQcm9qZWN0VGl0bGUobmV3UHJvamVjdC5pbm5lclRleHQpXG4gIHJlbmRlclRhc2tMaXN0KG5ld1Byb2plY3QuaW5uZXJUZXh0KVxuICBjb25zb2xlLmxvZyhuZXdQcm9qZWN0LmlubmVyVGV4dClcblxufVxuXG5leHBvcnQgY29uc3QgZWRpdFByb2plY3QgPSBmdW5jdGlvbihwcm9qZWN0TmFtZSkge1xuXG59IiwiLy9sb2dpYyBmb3IgaG93IHdlIGhhbmRsZSBkaWZmZXJlbnQgZXZlbnRzIHNoYWxsIGdvIGluIGhlcmVcbmltcG9ydCB7YXBwZW5kQWRkUHJvamVjdElucHV0LCByZW1vdmVQcm9qZWN0LCBzZXRQcm9qZWN0VGl0bGUsIHJlbmRlclRhc2tMaXN0LCByZW1vdmVBZGRUYXNrQnV0dG9uLCByZW1vdmVUYXNrSW5wdXRGb3JtLCBhcHBlbmRJbnB1dEZvcm0sIGFwcGVuZFRhc2tFbGVtZW50LCBhcHBlbmRQcm9qZWN0RWxlbWVudCwgYXBwZW5kQWRkVGFza0J1dHRvbn0gZnJvbSAnLi9ET01sb2dpYy5qcydcbmltcG9ydCB7IHNhdmVUYXNrVG9Ub2RheXNUYXNrcywgZGVmYXVsdFN0b3JhZ2UsIHNhdmVQcm9qZWN0VG9TdG9yYWdlLCBzYXZlVGFza1RvU3RvcmFnZSwgZGVsZXRlUHJvamVjdCwgZWRpdFByb2plY3ROYW1lfSBmcm9tICcuL3N0b3JhZ2UuanMnXG5pbXBvcnQge3N0b3JhZ2V9IGZyb20gJy4vYXBwLmpzJ1xuaW1wb3J0IEVkaXRJY29uIGZyb20gJy4uL2VkaXQucG5nJ1xuaW1wb3J0IERlbGV0ZUljb24gZnJvbSAnLi4vZGVsZXRlLnBuZydcblxuZXhwb3J0IGNvbnN0IGNyZWF0ZUFkZFRhc2tCdXR0b24gPSBmdW5jdGlvbigpIHtcbiAgLy88YnV0dG9uIGlkPSdhZGRUYXNrJyBvbkNsaWNrPSdhcHBlbmRJbnB1dEZvcm0nPkFkZCBUYXNrPC9idXR0b24+XG4gIGNvbnN0IGJ1dHRvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpO1xuICBidXR0b24uc2V0QXR0cmlidXRlKCdpZCcsICdhZGRUYXNrJylcbiAgYnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgaGFuZGxlQWRkVGFza0J1dHRvbilcblxuICBidXR0b24uaW5uZXJIVE1MID0gJ0FkZCBUYXNrJ1xuXG4gIHJldHVybiBidXR0b247XG59XG5cbmV4cG9ydCBjb25zdCBjcmVhdGVQcm9qZWN0RWxlbWVudEZyb21JbnB1dCA9IGZ1bmN0aW9uKHByb2plY3ROYW1lKSB7XG4gIGNvbnN0IHByb2plY3RFbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gIHByb2plY3RFbGVtZW50LmlubmVySFRNTCA9IHByb2plY3ROYW1lO1xuICBwcm9qZWN0RWxlbWVudC5zZXRBdHRyaWJ1dGUoJ2NsYXNzJywncHJvamVjdCcpXG4gIHByb2plY3RFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJyxoYW5kbGVQcm9qZWN0Q2xpY2spXG5cblxuXG4gIC8vIGNvbnN0IGJ1dHRvbnMgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzcGFuJylcblxuICAvLyBjb25zdCBlZGl0ID0gbmV3IEltYWdlKCk7XG4gIC8vIGVkaXQuc3JjID0gRWRpdEljb247XG4gIC8vIGVkaXQuY2xhc3NMaXN0LmFkZCgnZWRpdCcpXG4gIC8vIGVkaXQuY2xhc3NMaXN0LmFkZCgnaWNvbicpXG4gIC8vIGVkaXQuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBoYW5kbGVFZGl0UHJvamVjdENsaWNrKVxuXG4gIC8vIGJ1dHRvbnMuYXBwZW5kQ2hpbGQoZWRpdCk7XG5cbiAgLy8gY29uc3QgZGVsZXRlSWNvbiA9IG5ldyBJbWFnZSgpO1xuICAvLyBkZWxldGVJY29uLnNyYyA9IERlbGV0ZUljb247XG4gIC8vIGRlbGV0ZUljb24uY2xhc3NMaXN0LmFkZCgnZGVsZXRlJylcbiAgLy8gZGVsZXRlSWNvbi5jbGFzc0xpc3QuYWRkKCdpY29uJylcbiAgLy8gZGVsZXRlSWNvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsaGFuZGxlRGVsZXRlUHJvamVjdENsaWNrKVxuXG4gIC8vIGJ1dHRvbnMuYXBwZW5kQ2hpbGQoZGVsZXRlSWNvbik7XG5cbiAgcHJvamVjdEVsZW1lbnQuYXBwZW5kQ2hpbGQoY3JlYXRlUHJvamVjdEVsZW1lbnRCdXR0b25zKCkpO1xuXG5cblxuXG4gIHJldHVybiBwcm9qZWN0RWxlbWVudDtcbn1cblxuZXhwb3J0IGNvbnN0IGNyZWF0ZVByb2plY3RFbGVtZW50QnV0dG9ucyA9IGZ1bmN0aW9uKCkge1xuICBjb25zdCBidXR0b25zID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpXG5cbiAgY29uc3QgZWRpdCA9IG5ldyBJbWFnZSgpO1xuICBlZGl0LnNyYyA9IEVkaXRJY29uO1xuICBlZGl0LmNsYXNzTGlzdC5hZGQoJ2VkaXQnKVxuICBlZGl0LmNsYXNzTGlzdC5hZGQoJ2ljb24nKVxuICBlZGl0LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgaGFuZGxlRWRpdFByb2plY3RDbGljaylcblxuICBidXR0b25zLmFwcGVuZENoaWxkKGVkaXQpO1xuXG4gIGNvbnN0IGRlbGV0ZUljb24gPSBuZXcgSW1hZ2UoKTtcbiAgZGVsZXRlSWNvbi5zcmMgPSBEZWxldGVJY29uO1xuICBkZWxldGVJY29uLmNsYXNzTGlzdC5hZGQoJ2RlbGV0ZScpXG4gIGRlbGV0ZUljb24uY2xhc3NMaXN0LmFkZCgnaWNvbicpXG4gIGRlbGV0ZUljb24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLGhhbmRsZURlbGV0ZVByb2plY3RDbGljaylcblxuICBidXR0b25zLmFwcGVuZENoaWxkKGRlbGV0ZUljb24pO1xuXG4gIHJldHVybiBidXR0b25zO1xufVxuXG5leHBvcnQgY29uc3QgY3JlYXRlUHJvamVjdE9iamVjdCA9IGZ1bmN0aW9uKCkge1xuICByZXR1cm4ge1xuICAgICd0YXNrcyc6IFtdLFxuICAgICdkZXNjcmlwdGlvbic6JydcbiAgfVxufVxuXG5leHBvcnQgY29uc3QgY3JlYXRlVGFza0Zyb21JbnB1dCA9IGZ1bmN0aW9uKCkge1xuICBjb25zdCB0YXNrID0ge31cbiAgdGFzay50aXRsZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyN0aXRsZScpLnZhbHVlICB8fCdkZWZhdWx0IHRhc2snXG4gIHRhc2suZGVzY3JpcHRpb24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjZGVzY3JpcHRpb24nKS52YWx1ZSB8fCAnJ1xuICB0YXNrLmRhdGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjZGF0ZScpLnZhbHVlIHx8ICcnXG4gIHRhc2sucHJpb3JpdHkgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjcHJpb3JpdHknKS52YWx1ZSB8fCAnJ1xuICB0YXNrLnByb2plY3QgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjcHJvamVjdFRpdGxlJykuZmlyc3RDaGlsZC5pbm5lclRleHRcbiAgcmV0dXJuIHRhc2s7XG59XG4vL3RoZXNlIHR3byBmdW5jdGlvbnMgY291bGQgaGF2ZSBiZWVuIGNvbWJpbmVkIGkgc2VlIG5vd1xuZXhwb3J0IGNvbnN0IGNyZWF0ZVRhc2sgPSBmdW5jdGlvbih0aXRsZSwgZGVzY3JpcHRpb24sIGRhdGUsIHByaW9yaXR5KSB7XG4gIGNvbnN0IHRhc2sgPSB7fVxuICB0YXNrLnRpdGxlID0gdGl0bGVcbiAgdGFzay5kZXNjcmlwdGlvbiA9IGRlc2NyaXB0aW9uXG4gIHRhc2suZGF0ZSA9IGRhdGVcbiAgdGFzay5wcmlvcml0eSA9IHByaW9yaXR5XG5cbiAgcmV0dXJuIHRhc2s7XG59XG5cbmV4cG9ydCBjb25zdCBjcmVhdGVBZGRQcm9qZWN0SW5wdXQgPSBmdW5jdGlvbigpIHtcbiAgY29uc3QgbWFpbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpXG4gIG1haW4uc2V0QXR0cmlidXRlKCdpZCcsICdhZGRQcm9qZWN0JylcblxuICBjb25zdCBpbnB1dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2lucHV0JylcbiAgaW5wdXQuc2V0QXR0cmlidXRlKCd0eXBlJywgJ3RleHQnKVxuICBpbnB1dC5zZXRBdHRyaWJ1dGUoJ2lkJywnYWRkUHJvamVjdElucHV0JylcblxuICBjb25zdCBkaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKVxuXG5cbiAgY29uc3QgYWRkID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYnV0dG9uJylcbiAgY29uc3QgY2FuY2VsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYnV0dG9uJylcbiAgYWRkLmlubmVySFRNTCA9ICdBZGQnXG4gIGNhbmNlbC5pbm5lckhUTUwgPSAnQ2FuY2VsJ1xuICBjYW5jZWwuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBoYW5kbGVDYW5jZWxBZGRQcm9qZWN0QnV0dG9uKVxuICBhZGQuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBoYW5kbGVBZGRQcm9qZWN0U3VibWl0QnV0dG9uKVxuICBkaXYuYXBwZW5kQ2hpbGQoYWRkKVxuICBkaXYuYXBwZW5kQ2hpbGQoY2FuY2VsKVxuICBtYWluLmFwcGVuZENoaWxkKGlucHV0KTtcbiAgbWFpbi5hcHBlbmRDaGlsZChkaXYpO1xuXG4gIGlucHV0LnNldEF0dHJpYnV0ZSgnYXV0b2ZvY3VzJywndHJ1ZScpXG5cbiAgaW5wdXQuYWRkRXZlbnRMaXN0ZW5lcigna2V5dXAnLCBmdW5jdGlvbihldmVudCkge1xuICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgaWYgKGV2ZW50LmtleUNvZGUgPT09MTMpIHtcbiAgICAgIGhhbmRsZUFkZFByb2plY3RTdWJtaXRCdXR0b24oKTtcbiAgICB9XG4gIH0pO1xuXG4gIHJldHVybiBtYWluO1xuXG5cbn1cblxuZXhwb3J0IGNvbnN0IGNyZWF0ZUFkZFByb2plY3RCdXR0b24gPSBmdW5jdGlvbiAoKSB7XG4gIGNvbnN0IGFkZFByb2plY3RCdXR0b24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdidXR0b24nKTtcbiAgYWRkUHJvamVjdEJ1dHRvbi5zZXRBdHRyaWJ1dGUoJ2lkJywgJ2FkZFByb2plY3QnKVxuICBhZGRQcm9qZWN0QnV0dG9uLmlubmVySFRNTCA9ICdBZGQgUHJvamVjdCdcbiAgYWRkUHJvamVjdEJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGFwcGVuZEFkZFByb2plY3RJbnB1dClcbiAgcmV0dXJuIGFkZFByb2plY3RCdXR0b247XG59XG5cbmV4cG9ydCBjb25zdCBjcmVhdGVJbnB1dEZvcm0gPSBmdW5jdGlvbigpIHtcbiAgY29uc3QgbWFpbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpXG4gIG1haW4uaWQgPSAndGFza0Zvcm0nXG5cbiAgY29uc3QgdGl0bGVMYWJlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2xhYmVsJylcbiAgdGl0bGVMYWJlbC5zZXRBdHRyaWJ1dGUoJ2ZvcicsJ3RpdGxlJylcbiAgdGl0bGVMYWJlbC5pbm5lckhUTUwgPSAnVGFzayBOYW1lJ1xuXG4gIGNvbnN0IHRpdGxlSW5wdXQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpbnB1dCcpXG4gIHRpdGxlSW5wdXQuc2V0QXR0cmlidXRlKCd0eXBlJywndGV4dCcpXG4gIHRpdGxlSW5wdXQuc2V0QXR0cmlidXRlKCdpZCcsJ3RpdGxlJylcblxuICBtYWluLmFwcGVuZENoaWxkKHRpdGxlTGFiZWwpO1xuICBtYWluLmFwcGVuZENoaWxkKHRpdGxlSW5wdXQpO1xuXG4gIGNvbnN0IGRhdGVJbnB1dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2lucHV0JylcbiAgZGF0ZUlucHV0LnNldEF0dHJpYnV0ZSgndHlwZScsJ2RhdGUnKVxuICBkYXRlSW5wdXQuc2V0QXR0cmlidXRlKCdpZCcsJ2RhdGUnKVxuICBtYWluLmFwcGVuZENoaWxkKGRhdGVJbnB1dCk7XG5cbiAgY29uc3QgcHJpb3JpdHlMYWJlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2xhYmVsJylcbiAgcHJpb3JpdHlMYWJlbC5zZXRBdHRyaWJ1dGUoJ2ZvcicsJ3ByaW9yaXR5JylcbiAgcHJpb3JpdHlMYWJlbC5pbm5lckhUTUwgPSAnUHJpb3JpdHknXG4gIGNvbnN0IHByaW9yaXR5U2VsZWN0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc2VsZWN0JylcbiAgcHJpb3JpdHlTZWxlY3Quc2V0QXR0cmlidXRlKCdpZCcsJ3ByaW9yaXR5JylcbiAgcHJpb3JpdHlTZWxlY3Quc2V0QXR0cmlidXRlKCduYW1lJywgJ3ByaW9yaXR5JylcblxuICBjb25zdCBoaWdoT3B0aW9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnb3B0aW9uJyk7XG4gIGhpZ2hPcHRpb24uc2V0QXR0cmlidXRlKCd2YWx1ZScsJ2hpZ2gnKVxuICBoaWdoT3B0aW9uLmlubmVySFRNTCA9ICdIaWdoJ1xuXG4gIGNvbnN0IG1lZGl1bU9wdGlvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ29wdGlvbicpXG4gIG1lZGl1bU9wdGlvbi5zZXRBdHRyaWJ1dGUoJ3ZhbHVlJywgJ21lZGl1bScpXG4gIG1lZGl1bU9wdGlvbi5pbm5lckhUTUwgPSAnTWVkaXVtJ1xuXG4gIGNvbnN0IGxvd09wdGlvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ29wdGlvbicpXG4gIGxvd09wdGlvbi5zZXRBdHRyaWJ1dGUoJ3ZhbHVlJywnbG93JylcbiAgbG93T3B0aW9uLmlubmVySFRNTCA9ICdMb3cnO1xuXG4gIHByaW9yaXR5U2VsZWN0LmFwcGVuZENoaWxkKGhpZ2hPcHRpb24pXG4gIHByaW9yaXR5U2VsZWN0LmFwcGVuZENoaWxkKG1lZGl1bU9wdGlvbilcbiAgcHJpb3JpdHlTZWxlY3QuYXBwZW5kQ2hpbGQobG93T3B0aW9uKVxuICBtYWluLmFwcGVuZENoaWxkKHByaW9yaXR5TGFiZWwpXG4gIG1haW4uYXBwZW5kQ2hpbGQocHJpb3JpdHlTZWxlY3QpXG5cbiAgY29uc3QgZGVzY3JpcHRpb25MYWJlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2xhYmVsJylcbiAgZGVzY3JpcHRpb25MYWJlbC5zZXRBdHRyaWJ1dGUoJ2ZvcicsJ2Rlc2NyaXB0aW9uJylcbiAgZGVzY3JpcHRpb25MYWJlbC5pbm5lckhUTUwgPSAnVGFzayBEZXNjcmlwdGlvbidcbiAgY29uc3QgZGVzY3JpcHRpb25JbnB1dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2lucHV0JylcbiAgZGVzY3JpcHRpb25JbnB1dC5zZXRBdHRyaWJ1dGUoJ3R5cGUnLCd0ZXh0JylcbiAgZGVzY3JpcHRpb25JbnB1dC5zZXRBdHRyaWJ1dGUoJ2lkJywgJ2Rlc2NyaXB0aW9uJylcblxuICBtYWluLmFwcGVuZENoaWxkKGRlc2NyaXB0aW9uTGFiZWwpXG4gIG1haW4uYXBwZW5kQ2hpbGQoZGVzY3JpcHRpb25JbnB1dClcblxuICBjb25zdCBkaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcblxuICBjb25zdCBzdWJtaXQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdidXR0b24nKVxuICBjb25zdCBjYW5jZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdidXR0b24nKVxuICBzdWJtaXQuaW5uZXJIVE1MID0gJ1N1Ym1pdCdcbiAgY2FuY2VsLmlubmVySFRNTCA9ICdDYW5jZWwnXG4gIGNhbmNlbC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGhhbmRsZUNhbmNlbEFkZFRhc2tCdXR0b24pXG4gIHN1Ym1pdC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGhhbmRsZUFkZFRhc2tTdWJtaXRCdXR0b24pXG4gIGRpdi5hcHBlbmRDaGlsZChzdWJtaXQpXG4gIGRpdi5hcHBlbmRDaGlsZChjYW5jZWwpXG5cbiAgbWFpbi5hcHBlbmRDaGlsZChkaXYpO1xuICAvL3N1Ym1pdC5zZXRBdHRyaWJ1dGUoJ29uc3VibWl0JywgJ2NyZWF0ZVRhc2tGcm9tSW5wdXQnKVxuXG5cbiAgZGVzY3JpcHRpb25JbnB1dC5hZGRFdmVudExpc3RlbmVyKCdrZXl1cCcsIGZ1bmN0aW9uKGV2ZW50KSB7XG4gICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICBpZiAoZXZlbnQua2V5Q29kZSA9PT0xMykge1xuICAgICAgaGFuZGxlQWRkVGFza1N1Ym1pdEJ1dHRvbigpO1xuICAgIH1cbiAgfSk7XG5cbiAgdGl0bGVJbnB1dC5hZGRFdmVudExpc3RlbmVyKCdrZXl1cCcsIGZ1bmN0aW9uKGV2ZW50KSB7XG4gICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICBpZiAoZXZlbnQua2V5Q29kZSA9PT0xMykge1xuICAgICAgaGFuZGxlQWRkVGFza1N1Ym1pdEJ1dHRvbigpO1xuICAgIH1cbiAgfSk7XG5cbiAgZGF0ZUlucHV0LmFkZEV2ZW50TGlzdGVuZXIoJ2tleXVwJywgZnVuY3Rpb24oZXZlbnQpIHtcbiAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIGlmIChldmVudC5rZXlDb2RlID09PTEzKSB7XG4gICAgICBoYW5kbGVBZGRUYXNrU3VibWl0QnV0dG9uKCk7XG4gICAgfVxuICB9KTtcblxuXG5cbiAgcmV0dXJuIG1haW47XG59XG5cbmV4cG9ydCBjb25zdCBjcmVhdGVUYXNrRWxlbWVudCA9IGZ1bmN0aW9uICh0YXNrVGl0bGUsIHRhc2tEZXNjcmlwdGlvbiwgdGFza0RhdGUsIHRhc2tQcmlvcml0eSkge1xuICBjb25zdCBkaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzcGFuJyk7XG4gIGRpdi5zZXRBdHRyaWJ1dGUoJ2NsYXNzJywndGFza3MnKVxuICBkaXYuaW5uZXJUZXh0ID0gdGFza1RpdGxlO1xuICBkaXYuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbihldmVudCkge1xuICAgIGNvbnNvbGUubG9nKHRoaXMpXG4gIH0pXG4gIGNvbnN0IG90aGVySW5mbyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3VsJylcbiAgY29uc3Qgc3BhbkRlc2NyaXB0aW9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnbGknKVxuICBjb25zdCBzcGFuRGF0ZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2xpJylcbiAgY29uc3Qgc3BhblByaW9yaXR5ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnbGknKVxuXG5cbiAgaWYodGFza0Rlc2NyaXB0aW9uID09PSB1bmRlZmluZWQpIHtcbiAgICB0YXNrRGVzY3JpcHRpb24gPSAnbm8gZGVzY3JpcHRpb24nXG4gIH1cblxuICBpZih0YXNrRGF0ZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgdGFza0RhdGUgPSAnbm8gZGF0ZSdcbiAgfVxuXG4gIGlmKHRhc2tQcmlvcml0eSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgdGFza1ByaW9yaXR5ID0gJydcbiAgfVxuXG5cblxuICBzcGFuRGVzY3JpcHRpb24uaW5uZXJUZXh0ID0gdGFza0Rlc2NyaXB0aW9uO1xuICBzcGFuRGF0ZS5pbm5lclRleHQgPSB0YXNrRGF0ZTtcbiAgc3BhblByaW9yaXR5LmlubmVyVGV4dCA9IHRhc2tQcmlvcml0eTtcblxuICBvdGhlckluZm8uYXBwZW5kQ2hpbGQoc3BhbkRlc2NyaXB0aW9uKVxuICBvdGhlckluZm8uYXBwZW5kQ2hpbGQoc3BhbkRhdGUpXG4gIG90aGVySW5mby5hcHBlbmRDaGlsZChzcGFuUHJpb3JpdHkpXG5cbiAgZGl2LmFwcGVuZENoaWxkKG90aGVySW5mbylcblxuXG5cblxuICByZXR1cm4gZGl2O1xufVxuXG5leHBvcnQgY29uc3QgY3JlYXRlVG9kYXlzVGFza3NFbGVtZW50ID0gZnVuY3Rpb24oKSB7XG4gIGNvbnN0IGRpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICBkaXYuc2V0QXR0cmlidXRlKCdpZCcsICd0b2RheXNUYXNrcycpXG5cbiAgY29uc3QgdG9kYXlzVGFzayA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpXG4gIHRvZGF5c1Rhc2suc2V0QXR0cmlidXRlKCdjbGFzcycsICdwcm9qZWN0JylcbiAgdG9kYXlzVGFzay5pbm5lckhUTUwgPSBcInRvZGF5J3MgdGFza3NcIlxuXG4gIGRpdi5hcHBlbmRDaGlsZCh0b2RheXNUYXNrKTtcbiAgdG9kYXlzVGFzay5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsaGFuZGxlUHJvamVjdENsaWNrKVxuXG4gIHJldHVybiBkaXY7XG59XG5cbmV4cG9ydCBjb25zdCBoYW5kbGVDYW5jZWxBZGRQcm9qZWN0QnV0dG9uID0gZnVuY3Rpb24oKSB7XG4gIGNvbnN0IHByb2plY3RJbnB1dEZvcm0gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjYWRkUHJvamVjdCcpXG4gIGNvbnN0IHByb2plY3RMaXN0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI3Byb2plY3RMaXN0JylcbiAgcHJvamVjdExpc3QucmVtb3ZlQ2hpbGQocHJvamVjdElucHV0Rm9ybSlcbiAgcHJvamVjdExpc3QuYXBwZW5kQ2hpbGQoY3JlYXRlQWRkUHJvamVjdEJ1dHRvbigpKVxufVxuXG5leHBvcnQgY29uc3QgaGFuZGxlQ2FuY2VsQWRkVGFza0J1dHRvbiA9IGZ1bmN0aW9uKCkge1xuICBjb25zb2xlLmxvZyh0aGlzKVxuICByZW1vdmVUYXNrSW5wdXRGb3JtKCk7XG4gIGFwcGVuZEFkZFRhc2tCdXR0b24oKTtcbn1cblxuY29uc3QgdG9kYXlzRGF0ZSA9IGZ1bmN0aW9uKCkge1xudmFyIHRvZGF5ID0gbmV3IERhdGUoKTtcbnZhciBkZCA9IFN0cmluZyh0b2RheS5nZXREYXRlKCkpLnBhZFN0YXJ0KDIsICcwJyk7XG52YXIgbW0gPSBTdHJpbmcodG9kYXkuZ2V0TW9udGgoKSArIDEpLnBhZFN0YXJ0KDIsICcwJyk7IC8vSmFudWFyeSBpcyAwIVxudmFyIHl5eXkgPSB0b2RheS5nZXRGdWxsWWVhcigpO1xuXG50b2RheSA9IHl5eXkgKyAnLScgKyBtbSArICctJyArIGRkO1xuXG5yZXR1cm4gdG9kYXk7XG59XG5cbmV4cG9ydCBjb25zdCBoYW5kbGVBZGRUYXNrU3VibWl0QnV0dG9uID0gZnVuY3Rpb24gKCkge1xuICAvL2NyZWF0ZSB0YXNrIGZyb20gaW5wdXQsIHNhdmUgaXQgdG8gc3RvcmFnZSwgcmVuZGVyIHBhZ2UgZnJvbSBzdG9yYWdlICh1c2luZyBzdG9yYWdlL3N0YXRlIHRvIGFwcGVuZCB0aGluZ3MpXG4gIC8vcmVtb3ZlIGlucHV0IGZvcm0sIHJldHVybiBhZGRUYXNrIGJ1dHRvblxuICBjb25zdCB0YXNrID0gY3JlYXRlVGFza0Zyb21JbnB1dCgpO1xuICBjb25zdCBwcm9qZWN0TmFtZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNwcm9qZWN0VGl0bGUnKS5maXJzdEVsZW1lbnRDaGlsZC5pbm5lclRleHRcbiAgY29uc29sZS5sb2codGFzaylcblxuICBpZih0YXNrLmRhdGUgPT09IHRvZGF5c0RhdGUoKSkge1xuICAgIHN0b3JhZ2VbXCJ0b2RheSdzIHRhc2tzXCJdLnRhc2tzLnB1c2godGFzaylcbiAgICBzYXZlVGFza1RvVG9kYXlzVGFza3MoKVxuXG4gIH1cblxuICBjb25zdCBjdXJyZW50UHJvamVjdCA9IHN0b3JhZ2VbcHJvamVjdE5hbWVdOyAvL3t0YXNrczogW10sIGRlc2NyaXB0aW9uOiAnJ31cbiAgY3VycmVudFByb2plY3QudGFza3MucHVzaCh0YXNrKVxuICBjb25zdCB0YXNrRWxlbWVudCA9IGNyZWF0ZVRhc2tFbGVtZW50KHRhc2sudGl0bGUsIHRhc2suZGVzY3JpcHRpb24sIHRhc2suZGF0ZSwgdGFzay5wcmlvcml0eSlcblxuICBzYXZlVGFza1RvU3RvcmFnZShwcm9qZWN0TmFtZSlcbiAgcmVtb3ZlVGFza0lucHV0Rm9ybSgpO1xuICBhcHBlbmRUYXNrRWxlbWVudCh0YXNrLnRpdGxlLCB0YXNrLmRlc2NyaXB0aW9uLCB0YXNrLmRhdGUsIHRhc2sucHJpb3JpdHkpXG4gIGFwcGVuZEFkZFRhc2tCdXR0b24oKTtcbn1cblxuZXhwb3J0IGNvbnN0IGhhbmRsZUFkZFRhc2tCdXR0b24gPSBmdW5jdGlvbigpIHtcbiAgaWYoIWRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyN0YXNrRm9ybScpKSB7XG4gICAgcmVtb3ZlQWRkVGFza0J1dHRvbigpO1xuICAgIGFwcGVuZElucHV0Rm9ybSgpO1xuICB9XG4gIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyN0aXRsZScpLmZvY3VzKCk7XG5cbn1cblxuZXhwb3J0IGNvbnN0IGhhbmRsZUFkZFByb2plY3RTdWJtaXRCdXR0b24gPSBmdW5jdGlvbigpIHtcbiAgY29uc3QgcHJvamVjdE5hbWUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjYWRkUHJvamVjdElucHV0JykudmFsdWVcbiAgaWYgKHByb2plY3ROYW1lID09PSAnJykge1xuICAgIGFsZXJ0KCdwbGVhc2UgbmFtZSB5b3VyIHByb2plY3QhJylcbiAgICByZXR1cm47XG4gIH1cbiAgY29uc3QgcHJvamVjdExpc3QgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjcHJvamVjdExpc3QnKTtcbiAgY29uc3QgcHJvamVjdElucHV0Rm9ybSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNhZGRQcm9qZWN0JylcbiAgaWYoIXN0b3JhZ2VbcHJvamVjdE5hbWVdKSB7XG5cbiAgcHJvamVjdExpc3QucmVtb3ZlQ2hpbGQocHJvamVjdElucHV0Rm9ybSlcbiAgYXBwZW5kUHJvamVjdEVsZW1lbnQocHJvamVjdE5hbWUpO1xuICBzYXZlUHJvamVjdFRvU3RvcmFnZShwcm9qZWN0TmFtZSlcbiAgcHJvamVjdExpc3QuYXBwZW5kQ2hpbGQoY3JlYXRlQWRkUHJvamVjdEJ1dHRvbigpKVxuICB9IGVsc2Uge1xuICAgIGFsZXJ0KCdwcm9qZWN0cyBtdXN0IGJlIGEgZGlmZmVyZW50IG5hbWUhJylcbiAgfVxufVxuXG5cblxuXG5cbmV4cG9ydCBjb25zdCBoYW5kbGVQcm9qZWN0Q2xpY2sgPSBmdW5jdGlvbigpIHtcbiAgY29uc29sZS5sb2codGhpcylcbiAgaWYodGhpcy5maXJzdEVsZW1lbnRDaGlsZCAmJiB0aGlzLmZpcnN0RWxlbWVudENoaWxkLnRhZ05hbWUgPT09ICdJTlBVVCcpIHtcblxuICAgIHJldHVybjtcbiAgfVxuICBjb25zdCB0aXRsZSA9IHRoaXMuaW5uZXJUZXh0O1xuICBjb25zb2xlLmxvZyh0aXRsZSk7XG4gIHNldFByb2plY3RUaXRsZSh0aXRsZSlcbiAgcmVuZGVyVGFza0xpc3QodGl0bGUpXG4gIC8vcmVuZGVyVGFza0xpc3QoKVxufVxuXG5leHBvcnQgY29uc3QgaGFuZGxlRGVsZXRlUHJvamVjdENsaWNrID0gZnVuY3Rpb24gKGV2ZW50KSB7XG4gIGNvbnN0IHByb2plY3RFbGVtZW50ID0gdGhpcy5wYXJlbnROb2RlLnBhcmVudE5vZGU7XG4gIGNvbnNvbGUubG9nKHByb2plY3RFbGVtZW50KVxuICBkZWxldGVQcm9qZWN0KHByb2plY3RFbGVtZW50LmlubmVyVGV4dClcbiAgcmVtb3ZlUHJvamVjdChwcm9qZWN0RWxlbWVudClcbiAgZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XG59XG5cblxuZXhwb3J0IGNvbnN0IGhhbmRsZUVkaXRQcm9qZWN0U3VibWl0ID0gZnVuY3Rpb24oY3VycmVudE5hbWUsIG5ld05hbWUpIHtcbiAgZWRpdFByb2plY3ROYW1lKGN1cnJlbnROYW1lLCBuZXdOYW1lKVxuXG5cblxuXG59XG5cbmV4cG9ydCBjb25zdCBoYW5kbGVFZGl0UHJvamVjdENsaWNrID0gZnVuY3Rpb24oZXZlbnQpIHtcbiAgbGV0IHByb2plY3RFbGVtZW50ID0gdGhpcy5wYXJlbnROb2RlLnBhcmVudE5vZGU7XG4gIGNvbnN0IHByb2plY3ROYW1lID0gcHJvamVjdEVsZW1lbnQuaW5uZXJUZXh0O1xuICBjb25zb2xlLmxvZyhwcm9qZWN0RWxlbWVudCwgcHJvamVjdE5hbWUpXG4gIHNldFByb2plY3RUaXRsZShwcm9qZWN0TmFtZSk7XG4gIHJlbmRlclRhc2tMaXN0KHByb2plY3ROYW1lKVxuICBjb25zdCBpbnB1dEZvcm0gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpbnB1dCcpO1xuICBpbnB1dEZvcm0uc2V0QXR0cmlidXRlKCdhdXRvZm9jdXMnLCd0cnVlJylcbiAgaW5wdXRGb3JtLnNldEF0dHJpYnV0ZSgndHlwZScsJ3RleHQnKVxuICBpbnB1dEZvcm0uc2V0QXR0cmlidXRlKCdpZCcsJ2VkaXRQcm9qZWN0SW5wdXQnKVxuXG4gIHByb2plY3RFbGVtZW50LmlubmVyVGV4dCA9ICcnXG4gIGlucHV0Rm9ybS52YWx1ZSA9IHByb2plY3ROYW1lO1xuXG4gIGlucHV0Rm9ybS5hZGRFdmVudExpc3RlbmVyKCdrZXl1cCcsIGZ1bmN0aW9uKGV2ZW50KSB7XG4gICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICBpZiAoZXZlbnQua2V5Q29kZSA9PT0xMykge1xuICAgICAgY29uc3QgbmV3TmFtZSA9IGlucHV0Rm9ybS52YWx1ZVxuICAgICAgaGFuZGxlRWRpdFByb2plY3RTdWJtaXQocHJvamVjdE5hbWUsIG5ld05hbWUpO1xuICAgICAgcHJvamVjdEVsZW1lbnQuaW5uZXJUZXh0ID0gbmV3TmFtZVxuICAgICAgcHJvamVjdEVsZW1lbnQuYXBwZW5kQ2hpbGQoY3JlYXRlUHJvamVjdEVsZW1lbnRCdXR0b25zKCkpXG4gICAgICBzZXRQcm9qZWN0VGl0bGUobmV3TmFtZSk7XG4gICAgICByZW5kZXJUYXNrTGlzdChuZXdOYW1lKVxuICAgIH1cbiAgfSk7XG5cbiAgcHJvamVjdEVsZW1lbnQuYXBwZW5kQ2hpbGQoaW5wdXRGb3JtKTtcbiAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI2VkaXRQcm9qZWN0SW5wdXQnKS5mb2N1cygpO1xuXG5cblxuXG5cblxuXG5cblxuICBldmVudC5zdG9wUHJvcGFnYXRpb24oKTtcblxufVxuXG5leHBvcnQgY29uc3QgaGFuZGxlVGFza0NsaWNrID0gZnVuY3Rpb24oZXZlbnQpIHtcblxufVxuXG4iLCIvL2FsbCBsb2dpYyByZWxhdGluZyB0byBzdG9yYWdlIGdvZXMgaGVyZVxuaW1wb3J0IHtjcmVhdGVQcm9qZWN0T2JqZWN0LCBjcmVhdGVUYXNrfSBmcm9tICcuL2xvZ2ljLmpzJ1xuaW1wb3J0IHtzdG9yYWdlfSBmcm9tICcuL2FwcC5qcydcblxuY29uc3QgbG9jYWxTdG9yYWdlID0gd2luZG93LmxvY2FsU3RvcmFnZTtcblxuZXhwb3J0IGNvbnN0IGRlZmF1bHRTdG9yYWdlID0gZnVuY3Rpb24gKCkge1xuICBzdG9yYWdlWydkZWZhdWx0IHByb2plY3QnXSA9IHtcbiAgICAndGFza3MnOiBbXSxcbiAgICAnZGVzY3JpcHRpb24nOiAnJ1xuICB9O1xuICBzdG9yYWdlW1widG9kYXkncyB0YXNrc1wiXSA9IHtcbiAgICAndGFza3MnOiBbXSxcbiAgICAnZGVzY3JpcHRpb24nOiAnJ1xuICB9O1xuICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbShcInRvZGF5J3MgdGFza3NcIiwgSlNPTi5zdHJpbmdpZnkoc3RvcmFnZVtcInRvZGF5J3MgdGFza3NcIl0pKVxuICBzdG9yYWdlWydkZWZhdWx0IHByb2plY3QnXS50YXNrcy5wdXNoKGNyZWF0ZVRhc2soJ2RlZmF1bHQgdGFzaycsICcnLCAnJywgJ0xvdycsICdkZWZhdWx0IHByb2plY3QnKSlcbiAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oJ2RlZmF1bHQgcHJvamVjdCcsIEpTT04uc3RyaW5naWZ5KHN0b3JhZ2VbJ2RlZmF1bHQgcHJvamVjdCddKSlcbn1cblxuZXhwb3J0IGNvbnN0IHNhdmVQcm9qZWN0VG9TdG9yYWdlID0gZnVuY3Rpb24ocHJvamVjdE5hbWUpIHtcbiAgc3RvcmFnZVtwcm9qZWN0TmFtZV0gPSBjcmVhdGVQcm9qZWN0T2JqZWN0KCk7XG4gIGxvY2FsU3RvcmFnZS5zZXRJdGVtKHByb2plY3ROYW1lLCBKU09OLnN0cmluZ2lmeShjcmVhdGVQcm9qZWN0T2JqZWN0KCkpKTtcblxufVxuXG5leHBvcnQgY29uc3Qgc2F2ZVRhc2tUb1N0b3JhZ2UgPSBmdW5jdGlvbihwcm9qZWN0TmFtZSkge1xuICBjb25zdCBwcm9qZWN0ID0gc3RvcmFnZVtwcm9qZWN0TmFtZV1cbiAgbG9jYWxTdG9yYWdlLnJlbW92ZUl0ZW0ocHJvamVjdE5hbWUpXG4gIGxvY2FsU3RvcmFnZS5zZXRJdGVtKHByb2plY3ROYW1lLCBKU09OLnN0cmluZ2lmeShwcm9qZWN0KSlcblxufVxuXG5leHBvcnQgY29uc3QgZGVsZXRlUHJvamVjdCA9IGZ1bmN0aW9uKHByb2plY3ROYW1lKSB7XG4gIGNvbnN0IHByb2plY3QgPSBzdG9yYWdlW3Byb2plY3ROYW1lXVxuXG4gIHN0b3JhZ2VbXCJ0b2RheSdzIHRhc2tzXCJdLnRhc2tzLmZvckVhY2goKGVsZW1lbnQsIGluZGV4LCBvYmplY3QpID0+IHtcbiAgICBpZihlbGVtZW50LnByb2plY3QgPT09IHByb2plY3ROYW1lKSB7XG4gICAgICBvYmplY3Quc3BsaWNlKGluZGV4LDEpXG4gICAgfVxuICB9KVxuICBzYXZlVGFza1RvVG9kYXlzVGFza3MoKTtcblxuICBsb2NhbFN0b3JhZ2UucmVtb3ZlSXRlbShwcm9qZWN0TmFtZSlcbiAgZGVsZXRlIHN0b3JhZ2VbcHJvamVjdE5hbWVdO1xuXG5cbn1cblxuZXhwb3J0IGNvbnN0IHNhdmVUYXNrVG9Ub2RheXNUYXNrcyA9IGZ1bmN0aW9uKCkge1xuICBjb25zdCB0b2RheXNUYXNrcyA9IHN0b3JhZ2VbXCJ0b2RheSdzIHRhc2tzXCJdO1xuICBsb2NhbFN0b3JhZ2UucmVtb3ZlSXRlbSh0b2RheXNUYXNrcylcbiAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oXCJ0b2RheSdzIHRhc2tzXCIsIEpTT04uc3RyaW5naWZ5KHRvZGF5c1Rhc2tzKSlcbn1cblxuZXhwb3J0IGNvbnN0IGVkaXRQcm9qZWN0TmFtZSA9IGZ1bmN0aW9uKGN1cnJlbnROYW1lLCBuZXdOYW1lKSB7XG4gIGNvbnN0IGN1cnJlbnRQcm9qZWN0ID0gc3RvcmFnZVtjdXJyZW50TmFtZV07XG4gIHN0b3JhZ2VbbmV3TmFtZV0gPSBjdXJyZW50UHJvamVjdFxuICBsb2NhbFN0b3JhZ2UucmVtb3ZlSXRlbShjdXJyZW50TmFtZSk7XG4gIGxvY2FsU3RvcmFnZS5zZXRJdGVtKG5ld05hbWUsIEpTT04uc3RyaW5naWZ5KGN1cnJlbnRQcm9qZWN0KSlcbiAgZGVsZXRlIHN0b3JhZ2VbY3VycmVudE5hbWVdXG5cbn0iLCJpbXBvcnQgJy4vc3R5bGUuY3NzJztcbmltcG9ydCB7aW5pdGlhbGl6YXRpb259IGZyb20gJy4vaW5pdGlhbGl6YXRpb24uanMnXG5cblxuZXhwb3J0IGNvbnN0IGFkZFRhc2tCdXR0b24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjYWRkVGFzaycpO1xuZXhwb3J0IGNvbnN0IGNvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNjb250YWluZXInKTtcbmV4cG9ydCBjb25zdCBwcm9qZWN0cyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5wcm9qZWN0Jyk7XG5leHBvcnQgY29uc3QgdGFza3MgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcudGFzaycpO1xuZXhwb3J0IGNvbnN0IGxvY2FsU3RvcmFnZSA9IHdpbmRvdy5sb2NhbFN0b3JhZ2U7XG5cbmV4cG9ydCBsZXQgc3RvcmFnZSA9IHt9O1xuXG5pbml0aWFsaXphdGlvbigpO1xuXG4vKiBzdG9yYWdlIHN0cnVjdHVyZSB3aWxsIGxvb2sgbGlrZTpcblxue3Byb2plY3QxOiB7dGFza3M6IFt7dGl0bGUgLCBkYXRlICwgZGV0YWlscyAsIHByaW9yaXR5fSwge3RpdGxlICwgZGF0ZSAsIGRldGFpbHMgLCBwcmlvcml0eX1dXG4gICAgICAgICAgICBkZXNjcmlwdGlvbjogJ2Egc2hvcnQgZGVzY3JpcHRpb24gb2Ygb3VyIHByb2plY3QgaGVyZScgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gcHJvamVjdDI6IHt0YXNrczogW3thcnJheSBvZiBvYmplY3RzLCBlYWNoIG9iamVjdCBkZXNjcmliaW5nIGEgc2luZ2xlIHRhc2t9XVxuICAgICAgICAgICAgZGVzY3JpcHRpb246ICdhIHNob3J0IGRlc2NyaXB0aW9uIG9mIG91ciBwcm9qZWN0IGhlcmUnICAgICAgICAgICAgICAgICAgICAgICAgICB9XG59XG5cblxuY29uc3Qgc3RvcmFnZSA9IHt9XG5zdG9yYWdlWydkZWZhdWx0IHByb2plY3QnXSA9XG57J3Rhc2tzJyA6IFt7J3RpdGxlJzogJ3BsYWNlaG9sZGVyJywgJ2RhdGUnOiAnMDMvMDMvMDMnLCAnZGV0YWlscyc6ICdzb21lIGRlZXRzIGhlcmUnLCAncHJpb3JpdHknOiAnaGlnaCd9XSxcbidkZXNjcmlwdGlvbic6ICdhIGJyaWVmIGRlc2NyaXB0aW9uIG9mIHRoZSBwcm9qZWN0IGF0IGhhbmQnfTtcbiovXG5cbi8vbmVlZHMgdG8gYmUgb3JnYW5pemVkIGxtYW9cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuLy9hZGRUYXNrQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgJ2FwcGVuZElucHV0Rm9ybScpXG5cblxuXG4vL3Rhc2tJbnB1dEZvcm1cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuIiwiaW1wb3J0IHsgZGVmYXVsdFN0b3JhZ2UgfSBmcm9tICcuL3N0b3JhZ2UuanMnXG5pbXBvcnQge3JlbmRlclByb2plY3RMaXN0LCBzZXRQcm9qZWN0VGl0bGUsIHJlbmRlclRhc2tMaXN0fSBmcm9tICcuL0RPTWxvZ2ljLmpzJ1xuaW1wb3J0IHtzdG9yYWdlfSBmcm9tICcuL2FwcC5qcydcblxuXG5leHBvcnQgY29uc3QgaW5pdGlhbGl6YXRpb24gPSBmdW5jdGlvbigpIHtcbiAgaWYgKHdpbmRvdy5sb2NhbFN0b3JhZ2UubGVuZ3RoID09PSAwKSB7XG4gICAgZGVmYXVsdFN0b3JhZ2UoKTtcbiAgICByZW5kZXJQcm9qZWN0TGlzdCgpO1xuICAgIGNvbnN0IHRpdGxlID0gT2JqZWN0LmtleXMoc3RvcmFnZSlbMF1cbiAgICBzZXRQcm9qZWN0VGl0bGUodGl0bGUpXG4gICAgcmVuZGVyVGFza0xpc3QodGl0bGUpXG4gIH0gZWxzZSB7XG4gICAgT2JqZWN0LmtleXMod2luZG93LmxvY2FsU3RvcmFnZSkuZm9yRWFjaChmdW5jdGlvbihrZXkpe1xuICAgICAgc3RvcmFnZVtrZXldID0gSlNPTi5wYXJzZSh3aW5kb3cubG9jYWxTdG9yYWdlLmdldEl0ZW0oa2V5KSlcbiAgICB9KVxuICAgIHJlbmRlclByb2plY3RMaXN0KCk7XG4gICAgY29uc3QgdGl0bGUgPSBPYmplY3Qua2V5cyhzdG9yYWdlKVswXVxuICAgIHNldFByb2plY3RUaXRsZSh0aXRsZSlcbiAgICByZW5kZXJUYXNrTGlzdCh0aXRsZSlcblxuICAgIC8vIGZvciAoY29uc3Qga2V5IG9mIGxvY2FsU3RvcmFnZSkge1xuICAgIC8vICAgc3RvcmFnZVtrZXldID0gSlNPTi5wYXJzZShsb2NhbFN0b3JhZ2Vba2V5XSk7XG5cbiAgICAvLyB9XG4gIH1cbn0iXSwibmFtZXMiOlsiX19fQ1NTX0xPQURFUl9FWFBPUlRfX18iLCJwdXNoIiwibW9kdWxlIiwiaWQiLCJleHBvcnRzIiwiY3NzV2l0aE1hcHBpbmdUb1N0cmluZyIsImxpc3QiLCJ0b1N0cmluZyIsInRoaXMiLCJtYXAiLCJpdGVtIiwiY29udGVudCIsIm5lZWRMYXllciIsImNvbmNhdCIsImxlbmd0aCIsImpvaW4iLCJpIiwibW9kdWxlcyIsIm1lZGlhIiwiZGVkdXBlIiwic3VwcG9ydHMiLCJsYXllciIsInVuZGVmaW5lZCIsImFscmVhZHlJbXBvcnRlZE1vZHVsZXMiLCJrIiwiX2siLCJjc3NNYXBwaW5nIiwiYnRvYSIsImJhc2U2NCIsInVuZXNjYXBlIiwiZW5jb2RlVVJJQ29tcG9uZW50IiwiSlNPTiIsInN0cmluZ2lmeSIsImRhdGEiLCJzb3VyY2VNYXBwaW5nIiwic291cmNlVVJMcyIsInNvdXJjZXMiLCJzb3VyY2UiLCJzb3VyY2VSb290Iiwic3R5bGVzSW5ET00iLCJnZXRJbmRleEJ5SWRlbnRpZmllciIsImlkZW50aWZpZXIiLCJyZXN1bHQiLCJtb2R1bGVzVG9Eb20iLCJvcHRpb25zIiwiaWRDb3VudE1hcCIsImlkZW50aWZpZXJzIiwiYmFzZSIsImNvdW50IiwiaW5kZXhCeUlkZW50aWZpZXIiLCJvYmoiLCJjc3MiLCJzb3VyY2VNYXAiLCJyZWZlcmVuY2VzIiwidXBkYXRlciIsImFkZEVsZW1lbnRTdHlsZSIsImJ5SW5kZXgiLCJzcGxpY2UiLCJhcGkiLCJkb21BUEkiLCJ1cGRhdGUiLCJuZXdPYmoiLCJyZW1vdmUiLCJsYXN0SWRlbnRpZmllcnMiLCJuZXdMaXN0IiwiaW5kZXgiLCJuZXdMYXN0SWRlbnRpZmllcnMiLCJfaSIsIl9pbmRleCIsIm1lbW8iLCJpbnNlcnQiLCJzdHlsZSIsInRhcmdldCIsInN0eWxlVGFyZ2V0IiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwid2luZG93IiwiSFRNTElGcmFtZUVsZW1lbnQiLCJjb250ZW50RG9jdW1lbnQiLCJoZWFkIiwiZSIsImdldFRhcmdldCIsIkVycm9yIiwiYXBwZW5kQ2hpbGQiLCJlbGVtZW50IiwiY3JlYXRlRWxlbWVudCIsInNldEF0dHJpYnV0ZXMiLCJhdHRyaWJ1dGVzIiwic3R5bGVFbGVtZW50Iiwibm9uY2UiLCJzZXRBdHRyaWJ1dGUiLCJpbnNlcnRTdHlsZUVsZW1lbnQiLCJzdHlsZVRhZ1RyYW5zZm9ybSIsImFwcGx5IiwicGFyZW50Tm9kZSIsInJlbW92ZUNoaWxkIiwicmVtb3ZlU3R5bGVFbGVtZW50Iiwic3R5bGVTaGVldCIsImNzc1RleHQiLCJmaXJzdENoaWxkIiwiY3JlYXRlVGV4dE5vZGUiLCJfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18iLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwibW9kdWxlSWQiLCJjYWNoZWRNb2R1bGUiLCJfX3dlYnBhY2tfbW9kdWxlc19fIiwibiIsImdldHRlciIsIl9fZXNNb2R1bGUiLCJkIiwiYSIsImRlZmluaXRpb24iLCJrZXkiLCJvIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiZyIsImdsb2JhbFRoaXMiLCJGdW5jdGlvbiIsInByb3AiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJzY3JpcHRVcmwiLCJpbXBvcnRTY3JpcHRzIiwibG9jYXRpb24iLCJjdXJyZW50U2NyaXB0Iiwic3JjIiwic2NyaXB0cyIsImdldEVsZW1lbnRzQnlUYWdOYW1lIiwicmVwbGFjZSIsInAiLCJyZW5kZXJQcm9qZWN0TGlzdCIsImtleXMiLCJzdG9yYWdlIiwiZm9yRWFjaCIsImFwcGVuZFByb2plY3RFbGVtZW50IiwiYXBwZW5kQWRkUHJvamVjdEJ1dHRvbiIsImFwcGVuZFRvZGF5c1Rhc2tzRWxlbWVudCIsImNyZWF0ZVRvZGF5c1Rhc2tzRWxlbWVudCIsInByb2plY3ROYW1lIiwiY3JlYXRlUHJvamVjdEVsZW1lbnRGcm9tSW5wdXQiLCJhcHBlbmRBZGRUYXNrQnV0dG9uIiwiY3JlYXRlQWRkVGFza0J1dHRvbiIsImFwcGVuZFRhc2tFbGVtZW50IiwidGFza1RpdGxlIiwidGFza0Rlc2NyaXB0aW9uIiwidGFza0RhdGUiLCJ0YXNrUHJpb3JpdHkiLCJ0YXNrRWxlbWVudCIsImNyZWF0ZVRhc2tFbGVtZW50IiwiYXBwZW5kQWRkUHJvamVjdElucHV0IiwiYWRkQnV0dG9uIiwicHJvamVjdExpc3QiLCJjcmVhdGVBZGRQcm9qZWN0SW5wdXQiLCJmb2N1cyIsImFkZFByb2plY3RCdXR0b24iLCJjcmVhdGVBZGRQcm9qZWN0QnV0dG9uIiwicmVuZGVyVGFza0xpc3QiLCJwYXJlbnQiLCJjbGVhclRhc2tMaXN0IiwidGFza3MiLCJ0aXRsZSIsImRlc2NyaXB0aW9uIiwiZGF0ZSIsInByaW9yaXR5IiwiY29uc29sZSIsImxvZyIsInNldFByb2plY3RUaXRsZSIsImgzIiwiaW5uZXJIVE1MIiwicHJvamVjdFRpdGxlIiwiZmlyc3RFbGVtZW50Q2hpbGQiLCJyZW1vdmVUYXNrSW5wdXRGb3JtIiwibGFzdEVsZW1lbnRDaGlsZCIsImJ1dHRvbiIsImFkZEV2ZW50TGlzdGVuZXIiLCJoYW5kbGVBZGRUYXNrQnV0dG9uIiwicHJvamVjdEVsZW1lbnQiLCJoYW5kbGVQcm9qZWN0Q2xpY2siLCJjcmVhdGVQcm9qZWN0RWxlbWVudEJ1dHRvbnMiLCJidXR0b25zIiwiZWRpdCIsIkltYWdlIiwiY2xhc3NMaXN0IiwiYWRkIiwiaGFuZGxlRWRpdFByb2plY3RDbGljayIsImRlbGV0ZUljb24iLCJoYW5kbGVEZWxldGVQcm9qZWN0Q2xpY2siLCJtYWluIiwiaW5wdXQiLCJkaXYiLCJjYW5jZWwiLCJoYW5kbGVDYW5jZWxBZGRQcm9qZWN0QnV0dG9uIiwiaGFuZGxlQWRkUHJvamVjdFN1Ym1pdEJ1dHRvbiIsImV2ZW50IiwicHJldmVudERlZmF1bHQiLCJrZXlDb2RlIiwiaW5uZXJUZXh0Iiwib3RoZXJJbmZvIiwic3BhbkRlc2NyaXB0aW9uIiwic3BhbkRhdGUiLCJzcGFuUHJpb3JpdHkiLCJ0b2RheXNUYXNrIiwicHJvamVjdElucHV0Rm9ybSIsImhhbmRsZUNhbmNlbEFkZFRhc2tCdXR0b24iLCJoYW5kbGVBZGRUYXNrU3VibWl0QnV0dG9uIiwidGFzayIsInZhbHVlIiwicHJvamVjdCIsImNyZWF0ZVRhc2tGcm9tSW5wdXQiLCJ0b2RheSIsImRkIiwibW0iLCJEYXRlIiwiU3RyaW5nIiwiZ2V0RGF0ZSIsInBhZFN0YXJ0IiwiZ2V0TW9udGgiLCJnZXRGdWxsWWVhciIsInNhdmVUYXNrVG9Ub2RheXNUYXNrcyIsInNhdmVUYXNrVG9TdG9yYWdlIiwidGFza0xpc3QiLCJyZW1vdmVBZGRUYXNrQnV0dG9uIiwidGl0bGVMYWJlbCIsInRpdGxlSW5wdXQiLCJkYXRlSW5wdXQiLCJwcmlvcml0eUxhYmVsIiwicHJpb3JpdHlTZWxlY3QiLCJoaWdoT3B0aW9uIiwibWVkaXVtT3B0aW9uIiwibG93T3B0aW9uIiwiZGVzY3JpcHRpb25MYWJlbCIsImRlc2NyaXB0aW9uSW5wdXQiLCJzdWJtaXQiLCJjcmVhdGVJbnB1dEZvcm0iLCJhbGVydCIsInNhdmVQcm9qZWN0VG9TdG9yYWdlIiwidGFnTmFtZSIsImRlbGV0ZVByb2plY3QiLCJuZXdQcm9qZWN0IiwicmVtb3ZlUHJvamVjdCIsInN0b3BQcm9wYWdhdGlvbiIsImlucHV0Rm9ybSIsIm5ld05hbWUiLCJjdXJyZW50TmFtZSIsImVkaXRQcm9qZWN0TmFtZSIsImhhbmRsZUVkaXRQcm9qZWN0U3VibWl0IiwibG9jYWxTdG9yYWdlIiwic2V0SXRlbSIsInJlbW92ZUl0ZW0iLCJvYmplY3QiLCJ0b2RheXNUYXNrcyIsImN1cnJlbnRQcm9qZWN0IiwicXVlcnlTZWxlY3RvckFsbCIsImNyZWF0ZVRhc2siLCJwYXJzZSIsImdldEl0ZW0iLCJpbml0aWFsaXphdGlvbiJdLCJzb3VyY2VSb290IjoiIn0=