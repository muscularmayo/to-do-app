(()=>{"use strict";var e={426:(e,t,n)=>{n.d(t,{Z:()=>a});var o=n(537),r=n.n(o),i=n(645),c=n.n(i)()(r());c.push([e.id,"#container {\n  display: grid;\n  grid-template-columns: 2fr 5fr;\n  grid-gap: 4px;\n  grid-template-rows:  1fr minmax(80%, auto) 7fr;\n  border: 1px white;\n}\n\n#container > :nth-child(odd) {\n  background-color: #e2bdbd;\n}\n#container > :nth-child(even) {\n  background-color: #b6c2e4;\n}\n\n#todaysTasks {\n  color: blue;\n  position: absolute;\n  bottom: 0px;\n}\n\n#projectList {\n  position: relative;\n}\n\nh1 {\n  color: white;\n}\n\nbody {\n  background-color: rgb(41, 20, 160);\n}\n\n.task {\n  padding: 2px;\n  margin: 1px;\n  border: black;\n}\n\n.project {\n  padding: 1px;\n  border: 1px outset rgb(0, 0, 0);\n  min-height: 20px;\n  background-color: #c49494;\n}\n\n#taskForm > button, label, input, select {\n  margin: 3px;\n}\n\n#taskForm {\n  display: flex;\n  flex-direction: column;\n}\n\ndiv > button, input {\n  margin: 3px;\n}\n\n#addProject {\n  background-color: #e2bdbd\n}\n\n.icon {\n  height: 18px;\n  width: 18px;\n  position: relative;\n  float: right;\n}\n\nimg {\n  background-color: #c49494;\n\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;EACE,aAAa;EACb,8BAA8B;EAC9B,aAAa;EACb,8CAA8C;EAC9C,iBAAiB;AACnB;;AAEA;EACE,yBAAyB;AAC3B;AACA;EACE,yBAAyB;AAC3B;;AAEA;EACE,WAAW;EACX,kBAAkB;EAClB,WAAW;AACb;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,kCAAkC;AACpC;;AAEA;EACE,YAAY;EACZ,WAAW;EACX,aAAa;AACf;;AAEA;EACE,YAAY;EACZ,+BAA+B;EAC/B,gBAAgB;EAChB,yBAAyB;AAC3B;;AAEA;EACE,WAAW;AACb;;AAEA;EACE,aAAa;EACb,sBAAsB;AACxB;;AAEA;EACE,WAAW;AACb;;AAEA;EACE;AACF;;AAEA;EACE,YAAY;EACZ,WAAW;EACX,kBAAkB;EAClB,YAAY;AACd;;AAEA;EACE,yBAAyB;;AAE3B",sourcesContent:["#container {\n  display: grid;\n  grid-template-columns: 2fr 5fr;\n  grid-gap: 4px;\n  grid-template-rows:  1fr minmax(80%, auto) 7fr;\n  border: 1px white;\n}\n\n#container > :nth-child(odd) {\n  background-color: #e2bdbd;\n}\n#container > :nth-child(even) {\n  background-color: #b6c2e4;\n}\n\n#todaysTasks {\n  color: blue;\n  position: absolute;\n  bottom: 0px;\n}\n\n#projectList {\n  position: relative;\n}\n\nh1 {\n  color: white;\n}\n\nbody {\n  background-color: rgb(41, 20, 160);\n}\n\n.task {\n  padding: 2px;\n  margin: 1px;\n  border: black;\n}\n\n.project {\n  padding: 1px;\n  border: 1px outset rgb(0, 0, 0);\n  min-height: 20px;\n  background-color: #c49494;\n}\n\n#taskForm > button, label, input, select {\n  margin: 3px;\n}\n\n#taskForm {\n  display: flex;\n  flex-direction: column;\n}\n\ndiv > button, input {\n  margin: 3px;\n}\n\n#addProject {\n  background-color: #e2bdbd\n}\n\n.icon {\n  height: 18px;\n  width: 18px;\n  position: relative;\n  float: right;\n}\n\nimg {\n  background-color: #c49494;\n\n}"],sourceRoot:""}]);const a=c},645:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",o=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),o&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),o&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,o,r,i){"string"==typeof e&&(e=[[null,e,void 0]]);var c={};if(o)for(var a=0;a<this.length;a++){var d=this[a][0];null!=d&&(c[d]=!0)}for(var s=0;s<e.length;s++){var u=[].concat(e[s]);o&&c[u[0]]||(void 0!==i&&(void 0===u[5]||(u[1]="@layer".concat(u[5].length>0?" ".concat(u[5]):""," {").concat(u[1],"}")),u[5]=i),n&&(u[2]?(u[1]="@media ".concat(u[2]," {").concat(u[1],"}"),u[2]=n):u[2]=n),r&&(u[4]?(u[1]="@supports (".concat(u[4],") {").concat(u[1],"}"),u[4]=r):u[4]="".concat(r)),t.push(u))}},t}},537:e=>{e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),i="/*# ".concat(r," */"),c=n.sources.map((function(e){return"/*# sourceURL=".concat(n.sourceRoot||"").concat(e," */")}));return[t].concat(c).concat([i]).join("\n")}return[t].join("\n")}},379:e=>{var t=[];function n(e){for(var n=-1,o=0;o<t.length;o++)if(t[o].identifier===e){n=o;break}return n}function o(e,o){for(var i={},c=[],a=0;a<e.length;a++){var d=e[a],s=o.base?d[0]+o.base:d[0],u=i[s]||0,l="".concat(s," ").concat(u);i[s]=u+1;var p=n(l),m={css:d[1],media:d[2],sourceMap:d[3],supports:d[4],layer:d[5]};if(-1!==p)t[p].references++,t[p].updater(m);else{var A=r(m,o);o.byIndex=a,t.splice(a,0,{identifier:l,updater:A,references:1})}c.push(l)}return c}function r(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,r){var i=o(e=e||[],r=r||{});return function(e){e=e||[];for(var c=0;c<i.length;c++){var a=n(i[c]);t[a].references--}for(var d=o(e,r),s=0;s<i.length;s++){var u=n(i[s]);0===t[u].references&&(t[u].updater(),t.splice(u,1))}i=d}}},569:e=>{var t={};e.exports=function(e,n){var o=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(n)}},216:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},795:e=>{e.exports=function(e){var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var o="";n.supports&&(o+="@supports (".concat(n.supports,") {")),n.media&&(o+="@media ".concat(n.media," {"));var r=void 0!==n.layer;r&&(o+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),o+=n.css,r&&(o+="}"),n.media&&(o+="}"),n.supports&&(o+="}");var i=n.sourceMap;i&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),t.styleTagTransform(o,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}},855:(e,t,n)=>{e.exports=n.p+"97405d90a9e9a397d1fd.png"},886:(e,t,n)=>{e.exports=n.p+"3f69390cbd68d6a92fc3.png"}},t={};function n(o){var r=t[o];if(void 0!==r)return r.exports;var i=t[o]={id:o,exports:{}};return e[o](i,i.exports,n),i.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var o in t)n.o(t,o)&&!n.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{var e;n.g.importScripts&&(e=n.g.location+"");var t=n.g.document;if(!e&&t&&(t.currentScript&&(e=t.currentScript.src),!e)){var o=t.getElementsByTagName("script");o.length&&(e=o[o.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),n.p=e})();var o={};(()=>{n.d(o,{Nh:()=>K,tO:()=>Q});var e=n(379),t=n.n(e),r=n(795),i=n.n(r),c=n(569),a=n.n(c),d=n(565),s=n.n(d),u=n(216),l=n.n(u),p=n(589),m=n.n(p),A=n(426),f={};f.styleTagTransform=m(),f.setAttributes=s(),f.insert=a().bind(null,"head"),f.domAPI=i(),f.insertStyleElement=l(),t()(A.Z,f),A.Z&&A.Z.locals&&A.Z.locals;const h=function(){Object.keys(Q).forEach((function(e){"today's tasks"!==e&&E(e)})),v(),y()},y=function(){document.querySelector("#projectList").appendChild(N())},E=function(e){document.querySelector("#projectList").appendChild(w(e))},b=function(){document.querySelector("#taskList").appendChild(j())},C=function(e,t,n,o){const r=P(e,t,n,o);document.querySelector("#taskList").appendChild(r)},g=function(){const e=document.querySelector("#addProject"),t=document.querySelector("#projectList");t.removeChild(e),t.appendChild(I()),document.querySelector("#addProjectInput").focus()},v=function(){const e=document.querySelector("#addProject"),t=document.querySelector("#projectList");e||t.appendChild(M())},k=function(e){!function(){const e=document.querySelector("#taskList");for(;e.firstChild;)e.removeChild(e.firstChild)}(),Q[e]?Q[e].tasks.forEach((e=>{C(e.title,e.description,e.date,e.priority)})):console.log("catch render error"),b()},x=function(e){const t=document.createElement("h3");t.innerHTML=e;const n=document.querySelector("#projectTitle"),o=n.firstElementChild;console.log(t),o&&n.removeChild(o),n.appendChild(t)},S=function(){return"taskForm"===document.querySelector("#taskList").lastElementChild.id&&(document.querySelector("#taskList").lastElementChild.remove(),!0)};var L=n(886),T=n(855);const j=function(){const e=document.createElement("button");return e.setAttribute("id","addTask"),e.addEventListener("click",W),e.innerHTML="Add Task",e},w=function(e){const t=document.createElement("div");return t.innerHTML=e,t.setAttribute("class","project"),t.addEventListener("click",D),t.appendChild(q()),t},q=function(){const e=document.createElement("span"),t=new Image;t.src=L,t.classList.add("edit"),t.classList.add("icon"),t.addEventListener("click",$),e.appendChild(t);const n=new Image;return n.src=T,n.classList.add("delete"),n.classList.add("icon"),n.addEventListener("click",J),e.appendChild(n),e},B=function(e,t,n,o){const r={};return r.title=e,r.description=t,r.date=n,r.priority=o,r},I=function(){const e=document.createElement("div");e.setAttribute("id","addProject");const t=document.createElement("input");t.setAttribute("type","text"),t.setAttribute("id","addProjectInput");const n=document.createElement("div"),o=document.createElement("button"),r=document.createElement("button");return o.innerHTML="Add",r.innerHTML="Cancel",r.addEventListener("click",H),o.addEventListener("click",Y),n.appendChild(o),n.appendChild(r),e.appendChild(t),e.appendChild(n),t.setAttribute("autofocus","true"),t.addEventListener("keyup",(e=>{e.preventDefault(),13===e.keyCode&&Y()})),e},M=function(){const e=document.createElement("button");return e.setAttribute("id","addProject"),e.innerHTML="Add Project",e.addEventListener("click",g),e},P=function(e,t,n,o){const r=document.createElement("span");r.setAttribute("class","tasks"),r.innerText=e,r.addEventListener("click",(function(e){console.log(this)}));const i=document.createElement("ul"),c=document.createElement("li"),a=document.createElement("li"),d=document.createElement("li");return void 0!==t&&""!==t||(t="n/a"),void 0!==n&&""!==n||(n="n/a"),void 0===o&&(o=""),c.innerText=`description: ${t}`,a.innerText=`date: ${n}`,d.innerText=`priority: ${o}`,i.appendChild(a),i.appendChild(d),i.appendChild(c),r.appendChild(i),r},N=function(){const e=document.createElement("div");e.setAttribute("id","todaysTasks");const t=document.createElement("div");return t.setAttribute("class","project"),t.innerHTML="today's tasks",e.appendChild(t),t.addEventListener("click",D),e},H=function(){const e=document.querySelector("#addProject"),t=document.querySelector("#projectList");t.removeChild(e),t.appendChild(M())},O=function(){console.log(this),S(),b()},F=function(){const e=function(){const e={};return e.title=document.querySelector("#title").value||"default task",e.description=document.querySelector("#description").value||"",e.date=document.querySelector("#date").value||"",e.priority=document.querySelector("#priority").value||"",e.project=document.querySelector("#projectTitle").firstChild.innerText,e}(),t=document.querySelector("#projectTitle").firstElementChild.innerText;console.log(e),e.date===function(){let e=new Date;const t=String(e.getDate()).padStart(2,"0"),n=String(e.getMonth()+1).padStart(2,"0"),o=e.getFullYear();return e=`${o}-${n}-${t}`,e}()&&(Q["today's tasks"].tasks.push(e),_()),Q[t].tasks.push(e),P(e.title,e.description,e.date,e.priority),U(t),S(),C(e.title,e.description,e.date,e.priority),b()},W=function(){document.querySelector("#taskForm")||(function(){if(document.querySelector("#addTask")){const e=document.querySelector("#taskList"),t=document.querySelector("#addTask");e.removeChild(t)}}(),document.querySelector("#taskList").appendChild(function(){const e=document.createElement("div");e.id="taskForm";const t=document.createElement("label");t.setAttribute("for","title"),t.innerHTML="Task Name";const n=document.createElement("input");n.setAttribute("type","text"),n.setAttribute("id","title"),e.appendChild(t),e.appendChild(n);const o=document.createElement("input");o.setAttribute("type","date"),o.setAttribute("id","date"),e.appendChild(o);const r=document.createElement("label");r.setAttribute("for","priority"),r.innerHTML="Priority";const i=document.createElement("select");i.setAttribute("id","priority"),i.setAttribute("name","priority");const c=document.createElement("option");c.setAttribute("value","high"),c.innerHTML="High";const a=document.createElement("option");a.setAttribute("value","medium"),a.innerHTML="Medium";const d=document.createElement("option");d.setAttribute("value","low"),d.innerHTML="Low",i.appendChild(c),i.appendChild(a),i.appendChild(d),e.appendChild(r),e.appendChild(i);const s=document.createElement("label");s.setAttribute("for","description"),s.innerHTML="Task Description";const u=document.createElement("input");u.setAttribute("type","text"),u.setAttribute("id","description"),e.appendChild(s),e.appendChild(u);const l=document.createElement("div"),p=document.createElement("button"),m=document.createElement("button");return p.innerHTML="Submit",m.innerHTML="Cancel",m.addEventListener("click",O),p.addEventListener("click",F),l.appendChild(p),l.appendChild(m),e.appendChild(l),u.addEventListener("keyup",(e=>{e.preventDefault(),13===e.keyCode&&F()})),n.addEventListener("keyup",(e=>{e.preventDefault(),13===e.keyCode&&F()})),o.addEventListener("keyup",(e=>{e.preventDefault(),13===e.keyCode&&F()})),e}())),document.querySelector("#title").focus()},Y=function(){const e=document.querySelector("#addProjectInput").value;if(""===e)return void alert("please name your project!");const t=document.querySelector("#projectList"),n=document.querySelector("#addProject");Q[e]?alert("projects must be a different name!"):(t.removeChild(n),E(e),R(e),t.appendChild(M()))},D=function(){if(console.log(this),this.firstElementChild&&"INPUT"===this.firstElementChild.tagName)return;const e=this.innerText;console.log(e),x(e),k(e)},J=function(e){const t=this.parentNode.parentNode;console.log(t),X(t.innerText),function(e){e.remove();const t=document.querySelector(".project");console.log(t),x(t.innerText),k(t.innerText),console.log(t.innerText)}(t),e.stopPropagation()},$=function(e){const t=this.parentNode.parentNode,n=t.innerText;console.log(t,n),x(n),k(n);const o=document.createElement("input");o.setAttribute("autofocus","true"),o.setAttribute("type","text"),o.setAttribute("id","editProjectInput"),t.innerText="",o.value=n,o.addEventListener("keyup",(e=>{if(e.preventDefault(),13===e.keyCode){const e=o.value;!function(e,t){z(e,t)}(n,e),t.innerText=e,t.appendChild(q()),x(e),k(e)}})),t.appendChild(o),document.querySelector("#editProjectInput").focus(),e.stopPropagation()},Z=window.localStorage,R=function(e){Q[e]={tasks:[],description:""},Z.setItem(e,JSON.stringify({tasks:[],description:""}))},U=function(e){const t=Q[e];Z.removeItem(e),Z.setItem(e,JSON.stringify(t))},X=function(e){Q[e],Q["today's tasks"].tasks.forEach(((t,n,o)=>{t.project===e&&o.splice(n,1)})),_(),Z.removeItem(e),delete Q[e]},_=function(){const e=Q["today's tasks"];Z.removeItem(e),Z.setItem("today's tasks",JSON.stringify(e))},z=function(e,t){const n=Q[e];Q[t]=n,Z.removeItem(e),Z.setItem(t,JSON.stringify(n)),delete Q[e]},G=function(){Z.clear(),window.location.reload()},K=(document.querySelector("#addTask"),document.querySelector("#container"),document.querySelectorAll(".project"),document.querySelectorAll(".task"),window.localStorage,document.querySelector("#clearStorage"));let Q={};!function(){if(0===window.localStorage.length){Q["default project"]={tasks:[],description:""},Q["today's tasks"]={tasks:[],description:""},Z.setItem("today's tasks",JSON.stringify(Q["today's tasks"])),Q["default project"].tasks.push(B("default task","and a description","add a date","a priority")),Q["default project"].tasks.push(B("new features","editing and deleting tasks","coming soon","high")),Z.setItem("default project",JSON.stringify(Q["default project"])),h();const e=Object.keys(Q)[0];x(e),k(e)}else{Object.keys(window.localStorage).forEach((function(e){Q[e]=JSON.parse(window.localStorage.getItem(e))})),h();const e=Object.keys(Q)[0];x(e),k(e)}K.addEventListener("click",G)}()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,